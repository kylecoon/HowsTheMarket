{"ast":null,"code":"var _jsxFileName = \"/Users/kylecoon/Desktop/HowsTheMarket/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend, Ticks, ArcElement } from 'chart.js';\nimport './assets/styles/styles.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, LineElement, ArcElement, Title, Tooltip, Legend);\nconst App = () => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState('');\n  const [dropdownText, setDropdownText] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [textKey, setTextKey] = useState(0);\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [fadeIn, setFadeIn] = useState(true);\n  const [postingsUpOrDown, setPostingsUpOrDown] = useState(\"Up\");\n  const [percentageChange, setPercentageChange] = useState(null);\n  const [salaryUpOrDown, setSalaryUpOrDown] = useState(\"Up\");\n  const [salaryChange, setSalaryChange] = useState(0);\n  const [topHirer, setTopHirer] = useState(null);\n  useEffect(() => {\n    if (!dropdownText) return; // Don't fetch until an option is selected\n\n    setFadeIn(false);\n    setTimeout(() => {\n      setSelectedOption(dropdownText);\n      let timeframe;\n      if (dropdownText === \"Today\") {\n        timeframe = \"day\";\n      } else if (dropdownText === \"This Week\") {\n        timeframe = \"week\";\n      } else if (dropdownText === \"This Month\") {\n        timeframe = \"month\";\n      }\n      const fetchData = async () => {\n        setError(null);\n        setLoading(true);\n        try {\n          const response = await axios.get(`http://192.168.0.93:5001/api/${timeframe}`);\n          setData(response.data);\n          setLoading(false);\n          setFadeIn(true);\n        } catch (err) {\n          setError(err.message || 'Something went wrong!');\n        }\n      };\n      fetchData();\n    }, 300);\n  }, [dropdownText]);\n  useEffect(() => {\n    if (Object.keys(data).length === 0) {\n      setPercentageChange(0);\n      setPostingsUpOrDown(\"Up\");\n      return;\n    }\n    let postingsPercentChange = 0;\n    let salaryChange = 0;\n    if (data[\"0\"] && !data[\"1\"]) {\n      postingsPercentChange = 100;\n      salaryChange = data[\"0\"][\"avg_salary\"];\n    }\n    if (data[\"0\"] && data[\"1\"]) {\n      postingsPercentChange = ((data[\"0\"][\"job_count\"] - data[\"1\"][\"job_count\"]) / data[\"1\"][\"job_count\"] * 100).toFixed(1);\n      salaryChange = (data[\"0\"][\"avg_salary\"] - data[\"1\"][\"avg_salary\"]).toFixed(1);\n    }\n    setPercentageChange(postingsPercentChange);\n    setPostingsUpOrDown(postingsPercentChange < 0 ? \"Down\" : \"Up\");\n    setSalaryChange(salaryChange);\n    setSalaryUpOrDown(salaryChange < 0 ? \"Down\" : \"Up\");\n    const maxKey = Object.keys(data[\"0\"]['company_frequency']).reduce((max, key) => {\n      return data[\"0\"]['company_frequency'][key] < data[\"0\"]['company_frequency'][max] ? key : max;\n    });\n    setTopHirer(maxKey);\n    const root = document.documentElement;\n    root.style.setProperty('--primary-color', postingsPercentChange < 0 ? 'firebrick' : 'green');\n  }, [data]);\n  const getTodayLabels = () => {\n    const daysOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n    const today = new Date();\n    const currentDay = today.getDay(); // 0 (Sunday) to 6 (Saturday)\n\n    // Generate the labels array\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 8 + i) % 7;\n      labels.push(daysOfWeek[labelIndex]);\n    }\n    return labels;\n  };\n  const getWeekLabels = () => {\n    return Object.values(data).map(entry => entry.date).reverse();\n  };\n  const getMonthLabels = () => {\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    const today = new Date();\n    const currentDay = today.getMonth(); // 0 (January) to 11 (December)\n\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 13 + i) % 12;\n      labels.push(months[labelIndex]);\n    }\n    return labels;\n  };\n  const postingsGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.date).reverse(),\n    datasets: [{\n      label: 'Job Count',\n      data: Object.values(data).map(entry => entry.job_count).reverse(),\n      backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n        if (index === 0) {\n          return 'rgba(0, 128, 0, 0.85)';\n        }\n        // Compare current job_count with the previous one\n        const previousJobCount = array[index - 1].job_count; // Get the previous job_count\n        return entry.job_count < previousJobCount ? 'rgba(178, 34, 34, 0.85)' : 'rgba(0, 128, 0, 0.85)'; // Red if lower, green if higher\n      }),\n      borderColor: '#333',\n      borderWidth: 1\n    }]\n  } : {};\n  const postingsGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: tooltipItem => {\n            return `Job Count: ${tooltipItem.raw}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : selectedOption === \"This Week\" ? getWeekLabels() : selectedOption === \"This Month\" ? getMonthLabels() : [],\n        ticks: {\n          minRotation: window.innerWidth < 768 ? 30 : 0\n        }\n      }\n    }\n  };\n  const salaryGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.avg_salary).reverse(),\n    datasets: [{\n      label: 'Average Salary',\n      data: Object.values(data).map(entry => entry.avg_salary).reverse(),\n      backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n        if (index === 0) {\n          return 'rgb(0, 128, 0)';\n        }\n        const previousSalary = array[index - 1].avg_salary; // Get the previous job_count\n        return entry.avg_salary < previousSalary ? 'rgb(178, 34, 34)' : 'rgb(0, 128, 0)'; // Red if lower, green if higher\n      }),\n      borderColor: '#333',\n      pointBorderColor: '#333',\n      pointBorderWidth: 2,\n      borderWidth: 2,\n      pointRadius: 10,\n      hoverRadius: 12.5,\n      tension: 0.3\n    }]\n  } : {};\n  const salaryGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: tooltipItem => {\n            return `Average Salary: ${tooltipItem.raw}k`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : selectedOption === \"This Week\" ? getWeekLabels() : selectedOption === \"This Month\" ? getMonthLabels() : [],\n        ticks: {\n          minRotation: window.innerWidth < 768 ? 30 : 0\n        }\n      },\n      y: {\n        beginAtZero: false,\n        min: Math.floor(Math.min(...Object.values(data).map(entry => entry.avg_salary)) - 1),\n        ticks: {\n          callback: function (value) {\n            return `${value}k`; // Append 'k' to each y-axis label\n          }\n        }\n      }\n    }\n  };\n  const companyGraphData = data && data[\"0\"] && data[\"0\"][\"company_frequency\"] ? {\n    labels: Object.keys(data[\"0\"][\"company_frequency\"]),\n    datasets: [{\n      data: Object.values(data[\"0\"][\"company_frequency\"]),\n      backgroundColor: ['rgba(255, 215, 0, 0.8)', 'rgba(0, 128, 0, 0.8)', 'rgba(30, 144, 255, 0.8)', 'rgba(178, 34, 34, 0.8)', 'rgba(255, 140, 0, 0.8)'],\n      borderColor: ['rgba(255, 215, 0, 1)', 'rgba(0, 128, 0, 1)', 'rgba(30, 144, 255, 1)', 'rgba(178, 34, 34, 1)', 'rgba(255, 140, 0, 1)'],\n      borderWidth: 1\n    }]\n  } : {};\n  const companyGraphOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return `${tooltipItem.label}: ${tooltipItem.raw}`;\n          }\n        }\n      }\n    },\n    plugins: [{\n      id: 'customLabels',\n      afterDraw(chart) {\n        const {\n          ctx,\n          data\n        } = chart;\n        const {\n          datasets\n        } = data;\n        const meta = chart.getDatasetMeta(0); // Get the metadata for the first dataset\n        const radius = chart.innerRadius + (chart.outerRadius - chart.innerRadius) / 2;\n        datasets[0].data.forEach((value, index) => {\n          const arc = meta.data[index];\n          const angle = (arc.startAngle + arc.endAngle) / 2;\n          const x = chart.width / 2 + radius * Math.cos(angle);\n          const y = chart.height / 2 + radius * Math.sin(angle);\n          ctx.save();\n          ctx.font = '12px Arial';\n          ctx.textAlign = x > chart.width / 2 ? 'left' : 'right';\n          ctx.textBaseline = 'middle';\n          ctx.fillStyle = datasets[0].backgroundColor[index];\n          ctx.fillText(data.labels[index], x, y);\n          ctx.restore();\n        });\n      }\n    }]\n  };\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSelect = option => {\n    setIsOpen(false);\n    setTextKey(prevKey => prevKey + 1);\n    setDropdownText(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How's The Job Market\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-dropdown\",\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-dropdown-selected\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `arrow-down ${isOpen ? 'rotate-down' : 'rotate-right'}`,\n            children: \"\\u25BE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"custom-dropdown-selected-text animate\",\n            children: [\" \", dropdownText]\n          }, textKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `custom-dropdown-options ${isOpen ? 'open' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('Today'),\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('This Week'),\n            children: \"This Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('This Month'),\n            children: \"This Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"question-mark\",\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `data-container ${fadeIn ? 'fade-in' : 'fade-out'}`,\n      children: selectedOption && !loading && Object.keys(data).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-text\",\n            children: \"Job Postings Are\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `stat-percent ${percentageChange < 0 ? 'negative' : 'positive'}`,\n            children: [\" \", postingsUpOrDown, \" \", Math.abs(percentageChange), \"% \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-timeframe\",\n            children: selectedOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"New Job Postings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            data: postingsGraphData,\n            options: postingsGraphOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-text\",\n            children: \"Base Salaries Are\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `stat-percent ${salaryChange < 0 ? 'negative' : 'positive'}`,\n            children: [\" \", salaryUpOrDown, \" $\", Math.abs(salaryChange), \"k \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-timeframe\",\n            children: selectedOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Average Base Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: salaryGraphData,\n            options: salaryGraphOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-percent positive\",\n            children: [\" \", topHirer, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-text\",\n            children: \"Posted The Most\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-timeframe\",\n            children: [\" \", selectedOption]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Top 5 Posting Companies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: companyGraphData,\n            options: companyGraphOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hvAGYgnlJZ2iZuFrepd8MwspOcQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Line","Doughnut","Chart","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","LineElement","Title","Tooltip","Legend","Ticks","ArcElement","axios","jsxDEV","_jsxDEV","register","App","_s","selectedOption","setSelectedOption","dropdownText","setDropdownText","isOpen","setIsOpen","textKey","setTextKey","data","setData","loading","setLoading","error","setError","fadeIn","setFadeIn","postingsUpOrDown","setPostingsUpOrDown","percentageChange","setPercentageChange","salaryUpOrDown","setSalaryUpOrDown","salaryChange","setSalaryChange","topHirer","setTopHirer","setTimeout","timeframe","fetchData","response","get","err","message","Object","keys","length","postingsPercentChange","toFixed","maxKey","reduce","max","key","root","document","documentElement","style","setProperty","getTodayLabels","daysOfWeek","today","Date","currentDay","getDay","labels","i","labelIndex","push","getWeekLabels","values","map","entry","date","reverse","getMonthLabels","months","getMonth","postingsGraphData","datasets","label","job_count","backgroundColor","index","array","previousJobCount","borderColor","borderWidth","postingsGraphOptions","maintainAspectRatio","responsive","plugins","legend","display","tooltip","callbacks","tooltipItem","raw","scales","x","grid","ticks","minRotation","window","innerWidth","salaryGraphData","avg_salary","previousSalary","pointBorderColor","pointBorderWidth","pointRadius","hoverRadius","tension","salaryGraphOptions","y","beginAtZero","min","Math","floor","callback","value","companyGraphData","companyGraphOptions","id","afterDraw","chart","ctx","meta","getDatasetMeta","radius","innerRadius","outerRadius","forEach","arc","angle","startAngle","endAngle","width","cos","height","sin","save","font","textAlign","textBaseline","fillStyle","fillText","restore","toggleDropdown","handleSelect","option","prevKey","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","abs","options","_c","$RefreshReg$"],"sources":["/Users/kylecoon/Desktop/HowsTheMarket/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend, Ticks, ArcElement } from 'chart.js';\nimport './assets/styles/styles.css';\nimport axios from 'axios';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, LineElement, ArcElement, Title, Tooltip, Legend);\n\nconst App = () => {\n  const [selectedOption, setSelectedOption] = useState('');\n  const [dropdownText, setDropdownText] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [textKey, setTextKey] = useState(0);\n  const [data, setData] = useState({}); \n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null); \n  const [fadeIn, setFadeIn] = useState(true);\n  const [postingsUpOrDown, setPostingsUpOrDown] = useState(\"Up\"); \n  const [percentageChange, setPercentageChange] = useState(null);\n  const [salaryUpOrDown, setSalaryUpOrDown] = useState(\"Up\")\n  const [salaryChange, setSalaryChange] = useState(0)\n  const [topHirer, setTopHirer] = useState(null);\n\n  useEffect(() => {\n    if (!dropdownText) return; // Don't fetch until an option is selected\n\n    setFadeIn(false);\n    setTimeout(() => {\n      setSelectedOption(dropdownText);\n      let timeframe;\n      if (dropdownText === \"Today\") {\n        timeframe = \"day\";\n      }\n      else if (dropdownText === \"This Week\") {\n        timeframe = \"week\";\n      }\n      else if (dropdownText === \"This Month\") {\n        timeframe = \"month\";\n      }\n\n      const fetchData = async () => {\n        setError(null);\n        setLoading(true);\n        try {\n          const response = await axios.get(`http://192.168.0.93:5001/api/${timeframe}`);\n          setData(response.data);\n          setLoading(false);\n          setFadeIn(true);\n        } catch (err) {\n          setError(err.message || 'Something went wrong!');\n        }\n      };\n\n      fetchData();\n    }, 300)\n\n  }, [dropdownText]);\n\n  useEffect(() => {\n    if (Object.keys(data).length === 0) {\n      setPercentageChange(0);\n      setPostingsUpOrDown(\"Up\");\n      return;\n    }\n    let postingsPercentChange = 0;\n    let salaryChange = 0;\n    if (data[\"0\"] && !data[\"1\"]) {\n      postingsPercentChange = 100;\n      salaryChange = data[\"0\"][\"avg_salary\"]\n\n    }\n    if (data[\"0\"] && data[\"1\"]) {\n      postingsPercentChange = (((data[\"0\"][\"job_count\"] - data[\"1\"][\"job_count\"]) / data[\"1\"][\"job_count\"]) * 100).toFixed(1);\n      salaryChange = (data[\"0\"][\"avg_salary\"] - data[\"1\"][\"avg_salary\"]).toFixed(1);\n    }\n    setPercentageChange(postingsPercentChange);\n    setPostingsUpOrDown(postingsPercentChange < 0 ? \"Down\" : \"Up\");\n\n    setSalaryChange(salaryChange);\n    setSalaryUpOrDown(salaryChange < 0 ? \"Down\" : \"Up\");\n\n    const maxKey = Object.keys(data[\"0\"]['company_frequency']).reduce((max, key) => {\n      return data[\"0\"]['company_frequency'][key] < data[\"0\"]['company_frequency'][max] ? key : max;\n    });\n    setTopHirer(maxKey);\n\n    const root = document.documentElement;\n    root.style.setProperty('--primary-color', postingsPercentChange < 0 ? 'firebrick' : 'green');\n  }, [data]); \n\n  const getTodayLabels = () => {\n    const daysOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n    \n    const today = new Date();\n    const currentDay = today.getDay();  // 0 (Sunday) to 6 (Saturday)\n    \n    // Generate the labels array\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 8+ i) % 7;\n      labels.push(daysOfWeek[labelIndex]);\n    }\n    \n    return labels;\n  };\n\n  const getWeekLabels = () => {\n    return Object.values(data).map(entry => entry.date).reverse();\n  };\n\n  const getMonthLabels = () => {\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    \n    const today = new Date();\n    const currentDay = today.getMonth();  // 0 (January) to 11 (December)\n    \n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 13 + i) % 12;\n      labels.push(months[labelIndex]);\n    }\n    \n    return labels;\n  };\n\n  const postingsGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.date).reverse(),  \n    datasets: [\n      {\n        label: 'Job Count',\n        data: Object.values(data).map(entry => entry.job_count).reverse(),  \n        backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n          if (index === 0) {\n            return 'rgba(0, 128, 0, 0.85)';\n          }\n          // Compare current job_count with the previous one\n          const previousJobCount = array[index - 1].job_count; // Get the previous job_count\n          return entry.job_count < previousJobCount ? 'rgba(178, 34, 34, 0.85)' : 'rgba(0, 128, 0, 0.85)';  // Red if lower, green if higher\n        }),\n        borderColor: '#333',\n        borderWidth: 1,\n      },\n    ],\n  } : {};\n\n  const postingsGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        callbacks: {\n          label: (tooltipItem) => {\n            return `Job Count: ${tooltipItem.raw}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false, \n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : \n        (selectedOption === \"This Week\" ? getWeekLabels() :\n        (selectedOption === \"This Month\" ? getMonthLabels() : [])),\n        ticks: {\n          minRotation: window.innerWidth < 768 ? 30 : 0,\n        },\n      },\n    },\n  };\n\n  const salaryGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.avg_salary).reverse(),  \n    datasets: [\n      {\n        label: 'Average Salary',\n        data: Object.values(data).map(entry => entry.avg_salary).reverse(),  \n        backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n          if (index === 0) {\n            return 'rgb(0, 128, 0)'; \n          }\n          const previousSalary = array[index - 1].avg_salary; // Get the previous job_count\n          return entry.avg_salary < previousSalary ? 'rgb(178, 34, 34)' : 'rgb(0, 128, 0)';  // Red if lower, green if higher\n        }),\n        borderColor: '#333',  \n        pointBorderColor: '#333',\n        pointBorderWidth: 2,\n        borderWidth: 2,\n        pointRadius: 10,\n        hoverRadius: 12.5,\n        tension: 0.3,\n      },\n    ],\n  } : {};\n\n  const salaryGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        callbacks: {\n          label: (tooltipItem) => {\n            return `Average Salary: ${tooltipItem.raw}k`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false, \n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : \n        (selectedOption === \"This Week\" ? getWeekLabels() :\n        (selectedOption === \"This Month\" ? getMonthLabels() : [])),\n        ticks: {\n          minRotation: window.innerWidth < 768 ? 30 : 0,\n        },\n      },\n      y: {\n        beginAtZero: false, \n        min: Math.floor(Math.min(...Object.values(data).map(entry => entry.avg_salary)) - 1),  \n        ticks: {\n          callback: function(value) {\n            return `${value}k`; // Append 'k' to each y-axis label\n          },\n        },\n      },\n    },\n  };\n\n  const companyGraphData = data && data[\"0\"] && data[\"0\"][\"company_frequency\"] ? {\n    labels: Object.keys(data[\"0\"][\"company_frequency\"]),\n    datasets: [\n      {\n        data: Object.values(data[\"0\"][\"company_frequency\"]),\n        backgroundColor: [\n          'rgba(255, 215, 0, 0.8)',\n          'rgba(0, 128, 0, 0.8)',\n          'rgba(30, 144, 255, 0.8)',\n          'rgba(178, 34, 34, 0.8)',\n          'rgba(255, 140, 0, 0.8)', \n        ],\n        borderColor: [\n          'rgba(255, 215, 0, 1)',\n          'rgba(0, 128, 0, 1)',\n          'rgba(30, 144, 255, 1)',\n          'rgba(178, 34, 34, 1)',\n          'rgba(255, 140, 0, 1)', \n        ],\n        borderWidth: 1,\n      },\n    ],\n  } : {};\n  \n  const companyGraphOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return `${tooltipItem.label}: ${tooltipItem.raw}`;\n          },\n        },\n      },\n    },\n    plugins: [\n      {\n        id: 'customLabels',\n        afterDraw(chart) {\n          const { ctx, data } = chart;\n          const { datasets } = data;\n          const meta = chart.getDatasetMeta(0); // Get the metadata for the first dataset\n          const radius = chart.innerRadius + (chart.outerRadius - chart.innerRadius) / 2;\n  \n          datasets[0].data.forEach((value, index) => {\n            const arc = meta.data[index];\n            const angle = (arc.startAngle + arc.endAngle) / 2;\n            const x = chart.width / 2 + radius * Math.cos(angle);\n            const y = chart.height / 2 + radius * Math.sin(angle);\n  \n            ctx.save();\n            ctx.font = '12px Arial';\n            ctx.textAlign = x > chart.width / 2 ? 'left' : 'right';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = datasets[0].backgroundColor[index];\n            ctx.fillText(data.labels[index], x, y);\n            ctx.restore();\n          });\n        },\n      },\n    ],\n  };\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSelect = (option) => {\n    setIsOpen(false);\n    setTextKey((prevKey) => prevKey + 1);\n    setDropdownText(option);\n  };\n\n  return (\n    <div>\n      <h1>How's The Job Market</h1>\n      <div className=\"dropdown-container\">\n        <div className=\"custom-dropdown\" onClick={toggleDropdown}>\n          <div className=\"custom-dropdown-selected\">\n            <span className={`arrow-down ${isOpen ? 'rotate-down' : 'rotate-right'}`}>&#9662;</span>\n            <span key={textKey} className=\"custom-dropdown-selected-text animate\"> {dropdownText}</span>\n          </div>\n          <div className={`custom-dropdown-options ${isOpen ? 'open' : ''}`}>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('Today')}>\n              Today\n            </div>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('This Week')}>\n              This Week\n            </div>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('This Month')}>\n              This Month\n            </div>\n          </div>\n        </div>\n        <span className=\"question-mark\">?</span>\n      </div>\n\n      <div className={`data-container ${fadeIn ? 'fade-in' : 'fade-out'}`}>\n        {selectedOption && !loading && Object.keys(data).length > 0 && (\n          <div> \n            <div className=\"stat\">\n              <span className=\"stat-text\">Job Postings Are</span>\n              <span className={`stat-percent ${percentageChange < 0 ? 'negative' : 'positive'}`}> {postingsUpOrDown} {Math.abs(percentageChange)}% </span>\n              <span className=\"stat-timeframe\">{selectedOption}</span>\n            </div>\n            <div className=\"chart-container\">\n              <h1>New Job Postings</h1>\n              <Bar data={postingsGraphData} options={postingsGraphOptions} />\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-text\">Base Salaries Are</span>\n              <span className={`stat-percent ${salaryChange < 0 ? 'negative' : 'positive'}`}> {salaryUpOrDown} ${Math.abs(salaryChange)}k </span>\n              <span className=\"stat-timeframe\">{selectedOption}</span>\n            </div>\n            <div className=\"chart-container\">\n              <h1>Average Base Salary</h1>\n              <Line data={salaryGraphData} options={salaryGraphOptions} />\n            </div>\n            <div className=\"stat\">\n            <span className='stat-percent positive'> {topHirer} </span>\n              <span className=\"stat-text\">Posted The Most</span>\n              <span className=\"stat-timeframe\"> {selectedOption}</span>\n            </div>\n            <div className=\"chart-container\">\n              <h1>Top 5 Posting Companies</h1>\n              <Doughnut data={companyGraphData} options={companyGraphOptions} />\n            </div>\n          </div>\n        )}\n        {/*{selectedOption == \"This Week\" && (\n          <div className=\"wip\">\n            <h1>More Data Required</h1>\n            <h1>Available Nov. 25</h1>\n          </div>\n        )},\n        {selectedOption == \"This Month\" && (\n          <div className=\"wip\">\n            <h1>More Data Required</h1>\n            <h1>Available Dec. 16</h1>\n          </div>\n        )}*/}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}