{"ast":null,"code":"var _jsxFileName = \"/Users/kylecoon/Desktop/HowsTheMarket/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport { Chart, registerables } from \"chart.js\";\nimport { topojson, ChoroplethController, GeoFeature, ProjectionScale, ColorScale } from \"chartjs-chart-geo\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend, Ticks, ArcElement } from 'chart.js';\nimport { us, stateToAbbr, abbrToState } from \"./frontend/components/Maps\";\nimport './assets/styles/styles.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, LineElement, ArcElement, Title, Tooltip, Legend);\nChart.register(ChoroplethController, GeoFeature, ProjectionScale, ColorScale, ...registerables);\nconst App = () => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState('');\n  const [dropdownText, setDropdownText] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [textKey, setTextKey] = useState(0);\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [fadeIn, setFadeIn] = useState(true);\n  const [postingsUpOrDown, setPostingsUpOrDown] = useState(\"Up\");\n  const [percentageChange, setPercentageChange] = useState(null);\n  const [salaryUpOrDown, setSalaryUpOrDown] = useState(\"Up\");\n  const [salaryChange, setSalaryChange] = useState(0);\n  const [topHirer, setTopHirer] = useState(null);\n  const [topState, setTopState] = useState(null);\n  useEffect(() => {\n    if (!dropdownText) return; // Don't fetch until an option is selected\n\n    setFadeIn(false);\n    setTimeout(() => {\n      setSelectedOption(dropdownText);\n      let timeframe;\n      if (dropdownText === \"Today\") {\n        timeframe = \"day\";\n      } else if (dropdownText === \"This Week\") {\n        timeframe = \"week\";\n      } else if (dropdownText === \"This Month\") {\n        timeframe = \"month\";\n      }\n      const fetchData = async () => {\n        setError(null);\n        setLoading(true);\n        try {\n          const response = await axios.get(`http://192.168.0.93:5001/api/${timeframe}`);\n          setData(response.data);\n          setLoading(false);\n          setFadeIn(true);\n        } catch (err) {\n          setError(err.message || 'Something went wrong!');\n        }\n      };\n      fetchData();\n    }, 300);\n  }, [dropdownText]);\n  useEffect(() => {\n    if (Object.keys(data).length === 0) {\n      setPercentageChange(0);\n      setPostingsUpOrDown(\"Up\");\n      return;\n    }\n    let postingsPercentChange = 0;\n    let salaryChange = 0;\n    if (data[\"0\"] && !data[\"1\"]) {\n      postingsPercentChange = 100;\n      salaryChange = data[\"0\"][\"avg_salary\"];\n    }\n    if (data[\"0\"] && data[\"1\"]) {\n      postingsPercentChange = ((data[\"0\"][\"job_count\"] - data[\"1\"][\"job_count\"]) / data[\"1\"][\"job_count\"] * 100).toFixed(1);\n      salaryChange = (data[\"0\"][\"avg_salary\"] - data[\"1\"][\"avg_salary\"]).toFixed(1);\n    }\n    setPercentageChange(postingsPercentChange);\n    setPostingsUpOrDown(postingsPercentChange < 0 ? \"Down\" : \"Up\");\n    setSalaryChange(salaryChange);\n    setSalaryUpOrDown(salaryChange < 0 ? \"Down\" : \"Up\");\n    let maxKey = Object.keys(data[\"0\"]['company_frequency']).reduce((max, key) => {\n      return data[\"0\"]['company_frequency'][key] > data[\"0\"]['company_frequency'][max] ? key : max;\n    });\n    setTopHirer(maxKey);\n    maxKey = Object.keys(data[\"0\"]['state_frequency']).reduce((max, key) => {\n      return data[\"0\"]['state_frequency'][key] > data[\"0\"]['state_frequency'][max] ? key : max;\n    });\n    setTopState(maxKey);\n    const root = document.documentElement;\n    root.style.setProperty('--primary-color', postingsPercentChange < 0 ? 'firebrick' : 'green');\n    const nation = topojson.feature(us, us.objects.nation).features[0];\n    const states = topojson.feature(us, us.objects.states).features;\n    const chart = new Chart(document.getElementById(\"countryChart\").getContext(\"2d\"), {\n      type: 'choropleth',\n      data: {\n        labels: states.map(d => d.properties.name),\n        datasets: [{\n          label: 'States',\n          outline: nation,\n          data: states.map(d => ({\n            feature: d,\n            value: data[\"0\"][\"state_frequency\"][stateToAbbr[d.properties.name]]\n          }))\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false\n          }\n        },\n        scales: {\n          projection: {\n            axis: 'x',\n            projection: 'albersUsa'\n          },\n          color: {\n            axis: 'x',\n            legend: {\n              position: 'bottom-right',\n              align: window.innerWidth < 767 ? 'right' : 'bottom'\n            },\n            interpolate: 'greens',\n            ticks: {\n              callback: function (value) {\n                return Math.floor(value);\n              }\n            }\n          }\n        }\n      }\n    });\n    chart.resize();\n  }, [data]);\n  const getTodayLabels = () => {\n    const daysOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n    const today = new Date();\n    const currentDay = today.getDay(); // 0 (Sunday) to 6 (Saturday)\n\n    // Generate the labels array\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 8 + i) % 7;\n      labels.push(daysOfWeek[labelIndex]);\n    }\n    return labels;\n  };\n  const getWeekLabels = () => {\n    return Object.values(data).map(entry => entry.date).reverse();\n  };\n  const getMonthLabels = () => {\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    const today = new Date();\n    const currentDay = today.getMonth(); // 0 (January) to 11 (December)\n\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 13 + i) % 12;\n      labels.push(months[labelIndex]);\n    }\n    return labels;\n  };\n  const postingsGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.date).reverse(),\n    datasets: [{\n      label: 'Job Count',\n      data: Object.values(data).map(entry => entry.job_count).reverse(),\n      backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n        if (index === 0) {\n          return 'rgba(0, 128, 0, 0.85)';\n        }\n        // Compare current job_count with the previous one\n        const previousJobCount = array[index - 1].job_count; // Get the previous job_count\n        return entry.job_count < previousJobCount ? 'rgba(178, 34, 34, 0.85)' : 'rgba(0, 128, 0, 0.85)'; // Red if lower, green if higher\n      }),\n      borderColor: '#333',\n      borderWidth: 1\n    }]\n  } : {};\n  const postingsGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: tooltipItem => {\n            return `Job Count: ${tooltipItem.raw}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : selectedOption === \"This Week\" ? getWeekLabels() : selectedOption === \"This Month\" ? getMonthLabels() : [],\n        ticks: {\n          minRotation: window.innerWidth < 768 ? 30 : 0\n        }\n      }\n    }\n  };\n  const salaryGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.avg_salary).reverse(),\n    datasets: [{\n      label: 'Average Salary',\n      data: Object.values(data).map(entry => entry.avg_salary).reverse(),\n      backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n        if (index === 0) {\n          return 'rgb(0, 128, 0)';\n        }\n        const previousSalary = array[index - 1].avg_salary; // Get the previous job_count\n        return entry.avg_salary < previousSalary ? 'rgb(178, 34, 34)' : 'rgb(0, 128, 0)'; // Red if lower, green if higher\n      }),\n      borderColor: '#333',\n      pointBorderColor: '#333',\n      pointBorderWidth: 2,\n      borderWidth: 2,\n      pointRadius: 10,\n      hoverRadius: 12.5,\n      tension: 0.3\n    }]\n  } : {};\n  const salaryGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: tooltipItem => {\n            return `Average Salary: ${tooltipItem.raw}k`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : selectedOption === \"This Week\" ? getWeekLabels() : selectedOption === \"This Month\" ? getMonthLabels() : [],\n        ticks: {\n          minRotation: window.innerWidth < 768 ? 30 : 0\n        }\n      },\n      y: {\n        beginAtZero: false,\n        min: Math.floor(Math.min(...Object.values(data).map(entry => entry.avg_salary)) - 1),\n        ticks: {\n          callback: function (value) {\n            return `${value}k`;\n          }\n        }\n      }\n    }\n  };\n  const companyGraphData = data && data[\"0\"] && data[\"0\"][\"company_frequency\"] ? {\n    labels: Object.keys(data[\"0\"][\"company_frequency\"]),\n    datasets: [{\n      data: Object.values(data[\"0\"][\"company_frequency\"]),\n      backgroundColor: ['rgba(178, 34, 34, 0.8)', 'rgba(255, 140, 0, 0.8)', 'rgba(255, 215, 0, 0.8)', 'rgba(0, 128, 0, 0.8)', 'rgba(30, 144, 255, 0.8)'],\n      borderColor: ['rgba(178, 34, 34, 1)', 'rgba(255, 140, 0, 1)', 'rgba(255, 215, 0, 1)', 'rgba(0, 128, 0, 1)', 'rgba(30, 144, 255, 1)'],\n      borderWidth: 2\n    }]\n  } : {};\n  const companyGraphOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: window.innerWidth < 768 ? 'bottom' : 'right',\n        labels: {\n          boxWidth: 10,\n          boxHeight: 10\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return `${tooltipItem.label}: ${tooltipItem.raw}`;\n          }\n        }\n      }\n    }\n  };\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSelect = option => {\n    setIsOpen(false);\n    setTextKey(prevKey => prevKey + 1);\n    setDropdownText(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How's The Job Market\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-dropdown\",\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-dropdown-selected\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `arrow-down ${isOpen ? 'rotate-down' : 'rotate-right'}`,\n            children: \"\\u25BE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"custom-dropdown-selected-text animate\",\n            children: [\" \", dropdownText]\n          }, textKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `custom-dropdown-options ${isOpen ? 'open' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('Today'),\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('This Week'),\n            children: \"This Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('This Month'),\n            children: \"This Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"question-mark\",\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `data-container ${fadeIn ? 'fade-in' : 'fade-out'}`,\n      children: selectedOption && !loading && Object.keys(data).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section a\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-text\",\n              children: \"Job Postings Are\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `stat-percent ${percentageChange < 0 ? 'negative' : 'positive'}`,\n              children: [\" \", postingsUpOrDown, \" \", Math.abs(percentageChange), \"% \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-timeframe\",\n              children: selectedOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"New Job Postings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              data: postingsGraphData,\n              options: postingsGraphOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section b\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-text\",\n              children: \"Base Salaries Are\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `stat-percent ${salaryChange < 0 ? 'negative' : 'positive'}`,\n              children: [\" \", salaryUpOrDown, \" $\", Math.abs(salaryChange), \"k \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-timeframe\",\n              children: selectedOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Average Base Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              data: salaryGraphData,\n              options: salaryGraphOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section a\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-percent negative\",\n              children: [\" \", topHirer, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-text\",\n              children: \"Has Posted The Most\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-timeframe\",\n              children: [\" \", selectedOption]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container doughnut\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Top 5 Posting Companies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n              data: companyGraphData,\n              options: companyGraphOptions,\n              id: \"doughnut\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section b\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-percent positive\",\n              children: [\" \", abbrToState[topState], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-text\",\n              children: \"Has Posted The Most\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-timeframe\",\n              children: [\" \", selectedOption]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container country-chart\",\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"countryChart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JeHWF4ZDOZRpknt2sh9IhpiqCyI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Line","Doughnut","Chart","registerables","topojson","ChoroplethController","GeoFeature","ProjectionScale","ColorScale","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","LineElement","Title","Tooltip","Legend","Ticks","ArcElement","us","stateToAbbr","abbrToState","axios","jsxDEV","_jsxDEV","register","App","_s","selectedOption","setSelectedOption","dropdownText","setDropdownText","isOpen","setIsOpen","textKey","setTextKey","data","setData","loading","setLoading","error","setError","fadeIn","setFadeIn","postingsUpOrDown","setPostingsUpOrDown","percentageChange","setPercentageChange","salaryUpOrDown","setSalaryUpOrDown","salaryChange","setSalaryChange","topHirer","setTopHirer","topState","setTopState","setTimeout","timeframe","fetchData","response","get","err","message","Object","keys","length","postingsPercentChange","toFixed","maxKey","reduce","max","key","root","document","documentElement","style","setProperty","nation","feature","objects","features","states","chart","getElementById","getContext","type","labels","map","d","properties","name","datasets","label","outline","value","options","plugins","legend","display","scales","projection","axis","color","position","align","window","innerWidth","interpolate","ticks","callback","Math","floor","resize","getTodayLabels","daysOfWeek","today","Date","currentDay","getDay","i","labelIndex","push","getWeekLabels","values","entry","date","reverse","getMonthLabels","months","getMonth","postingsGraphData","job_count","backgroundColor","index","array","previousJobCount","borderColor","borderWidth","postingsGraphOptions","maintainAspectRatio","responsive","tooltip","callbacks","tooltipItem","raw","x","grid","minRotation","salaryGraphData","avg_salary","previousSalary","pointBorderColor","pointBorderWidth","pointRadius","hoverRadius","tension","salaryGraphOptions","y","beginAtZero","min","companyGraphData","companyGraphOptions","boxWidth","boxHeight","toggleDropdown","handleSelect","option","prevKey","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","abs","id","_c","$RefreshReg$"],"sources":["/Users/kylecoon/Desktop/HowsTheMarket/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport {Chart, registerables} from \"chart.js\";\nimport {topojson, ChoroplethController, GeoFeature, ProjectionScale, ColorScale} from \"chartjs-chart-geo\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend, Ticks, ArcElement } from 'chart.js';\nimport { us, stateToAbbr, abbrToState} from \"./frontend/components/Maps\"\nimport './assets/styles/styles.css';\nimport axios from 'axios';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, LineElement, ArcElement, Title, Tooltip, Legend);\n\nChart.register(ChoroplethController, GeoFeature, ProjectionScale, ColorScale, ...registerables);\n\nconst App = () => {\n  const [selectedOption, setSelectedOption] = useState('');\n  const [dropdownText, setDropdownText] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [textKey, setTextKey] = useState(0);\n  const [data, setData] = useState({}); \n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null); \n  const [fadeIn, setFadeIn] = useState(true);\n  const [postingsUpOrDown, setPostingsUpOrDown] = useState(\"Up\"); \n  const [percentageChange, setPercentageChange] = useState(null);\n  const [salaryUpOrDown, setSalaryUpOrDown] = useState(\"Up\")\n  const [salaryChange, setSalaryChange] = useState(0)\n  const [topHirer, setTopHirer] = useState(null);\n  const [topState, setTopState] = useState(null);\n\n  useEffect(() => {\n    if (!dropdownText) return; // Don't fetch until an option is selected\n\n    setFadeIn(false);\n    setTimeout(() => {\n      setSelectedOption(dropdownText);\n      let timeframe;\n      if (dropdownText === \"Today\") {\n        timeframe = \"day\";\n      }\n      else if (dropdownText === \"This Week\") {\n        timeframe = \"week\";\n      }\n      else if (dropdownText === \"This Month\") {\n        timeframe = \"month\";\n      }\n\n      const fetchData = async () => {\n        setError(null);\n        setLoading(true);\n        try {\n          const response = await axios.get(`http://192.168.0.93:5001/api/${timeframe}`);\n          setData(response.data);\n          setLoading(false);\n          setFadeIn(true);\n        } catch (err) {\n          setError(err.message || 'Something went wrong!');\n        }\n      };\n\n      fetchData();\n    }, 300)\n\n  }, [dropdownText]);\n\n  useEffect(() => {\n    if (Object.keys(data).length === 0) {\n      setPercentageChange(0);\n      setPostingsUpOrDown(\"Up\");\n      return;\n    }\n    let postingsPercentChange = 0;\n    let salaryChange = 0;\n    if (data[\"0\"] && !data[\"1\"]) {\n      postingsPercentChange = 100;\n      salaryChange = data[\"0\"][\"avg_salary\"]\n\n    }\n    if (data[\"0\"] && data[\"1\"]) {\n      postingsPercentChange = (((data[\"0\"][\"job_count\"] - data[\"1\"][\"job_count\"]) / data[\"1\"][\"job_count\"]) * 100).toFixed(1);\n      salaryChange = (data[\"0\"][\"avg_salary\"] - data[\"1\"][\"avg_salary\"]).toFixed(1);\n    }\n    setPercentageChange(postingsPercentChange);\n    setPostingsUpOrDown(postingsPercentChange < 0 ? \"Down\" : \"Up\");\n\n    setSalaryChange(salaryChange);\n    setSalaryUpOrDown(salaryChange < 0 ? \"Down\" : \"Up\");\n\n    let maxKey = Object.keys(data[\"0\"]['company_frequency']).reduce((max, key) => {\n      return data[\"0\"]['company_frequency'][key] > data[\"0\"]['company_frequency'][max] ? key : max;\n    });\n    setTopHirer(maxKey);\n\n    maxKey = Object.keys(data[\"0\"]['state_frequency']).reduce((max, key) => {\n      return data[\"0\"]['state_frequency'][key] > data[\"0\"]['state_frequency'][max] ? key : max;\n    });\n    setTopState(maxKey);\n\n    const root = document.documentElement;\n    root.style.setProperty('--primary-color', postingsPercentChange < 0 ? 'firebrick' : 'green');\n\n    const nation = topojson.feature(us, us.objects.nation).features[0];\n    const states = topojson.feature(us, us.objects.states).features;\n    \n    const chart = new Chart(document.getElementById(\"countryChart\").getContext(\"2d\"), {\n      type: 'choropleth',\n      data: {\n        labels: states.map((d) => d.properties.name),\n        datasets: [{\n          label: 'States',\n          outline: nation,\n          data: states.map((d) => ({feature: d, value: data[\"0\"][\"state_frequency\"][stateToAbbr[d.properties.name]]})),\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false\n          },\n        },\n        scales: {\n          projection: {\n            axis: 'x',\n            projection: 'albersUsa'  \n          },\n          color: {\n            axis: 'x',\n            legend: {\n              position: 'bottom-right',\n              align: window.innerWidth < 767 ? 'right' : 'bottom',\n            },\n            interpolate: 'greens',\n            ticks: {\n              callback: function(value) {\n                return Math.floor(value); \n              },\n            }\n          }\n        },\n      }\n    });\n    chart.resize();\n  }, [data]); \n\n  const getTodayLabels = () => {\n    const daysOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n    \n    const today = new Date();\n    const currentDay = today.getDay();  // 0 (Sunday) to 6 (Saturday)\n    \n    // Generate the labels array\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 8+ i) % 7;\n      labels.push(daysOfWeek[labelIndex]);\n    }\n    \n    return labels;\n  };\n\n  const getWeekLabels = () => {\n    return Object.values(data).map(entry => entry.date).reverse();\n  };\n\n  const getMonthLabels = () => {\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    \n    const today = new Date();\n    const currentDay = today.getMonth();  // 0 (January) to 11 (December)\n    \n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 13 + i) % 12;\n      labels.push(months[labelIndex]);\n    }\n    \n    return labels;\n  };\n\n  const postingsGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.date).reverse(),  \n    datasets: [\n      {\n        label: 'Job Count',\n        data: Object.values(data).map(entry => entry.job_count).reverse(),  \n        backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n          if (index === 0) {\n            return 'rgba(0, 128, 0, 0.85)';\n          }\n          // Compare current job_count with the previous one\n          const previousJobCount = array[index - 1].job_count; // Get the previous job_count\n          return entry.job_count < previousJobCount ? 'rgba(178, 34, 34, 0.85)' : 'rgba(0, 128, 0, 0.85)';  // Red if lower, green if higher\n        }),\n        borderColor: '#333',\n        borderWidth: 1,\n      },\n    ],\n  } : {};\n\n  const postingsGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        callbacks: {\n          label: (tooltipItem) => {\n            return `Job Count: ${tooltipItem.raw}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false, \n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : \n        (selectedOption === \"This Week\" ? getWeekLabels() :\n        (selectedOption === \"This Month\" ? getMonthLabels() : [])),\n        ticks: {\n          minRotation: window.innerWidth < 768 ? 30 : 0,\n        },\n      },\n    },\n  };\n\n  const salaryGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.avg_salary).reverse(),  \n    datasets: [\n      {\n        label: 'Average Salary',\n        data: Object.values(data).map(entry => entry.avg_salary).reverse(),  \n        backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n          if (index === 0) {\n            return 'rgb(0, 128, 0)'; \n          }\n          const previousSalary = array[index - 1].avg_salary; // Get the previous job_count\n          return entry.avg_salary < previousSalary ? 'rgb(178, 34, 34)' : 'rgb(0, 128, 0)';  // Red if lower, green if higher\n        }),\n        borderColor: '#333',  \n        pointBorderColor: '#333',\n        pointBorderWidth: 2,\n        borderWidth: 2,\n        pointRadius: 10,\n        hoverRadius: 12.5,\n        tension: 0.3,\n      },\n    ],\n  } : {};\n\n  const salaryGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        callbacks: {\n          label: (tooltipItem) => {\n            return `Average Salary: ${tooltipItem.raw}k`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false, \n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : \n        (selectedOption === \"This Week\" ? getWeekLabels() :\n        (selectedOption === \"This Month\" ? getMonthLabels() : [])),\n        ticks: {\n          minRotation: window.innerWidth < 768 ? 30 : 0,\n        },\n      },\n      y: {\n        beginAtZero: false, \n        min: Math.floor(Math.min(...Object.values(data).map(entry => entry.avg_salary)) - 1),  \n        ticks: {\n          callback: function(value) {\n            return `${value}k`;\n          },\n        },\n      },\n    },\n  };\n\n  const companyGraphData = data && data[\"0\"] && data[\"0\"][\"company_frequency\"] ? {\n    labels: Object.keys(data[\"0\"][\"company_frequency\"]),\n    datasets: [\n      {\n        data: Object.values(data[\"0\"][\"company_frequency\"]),\n        backgroundColor: [\n          'rgba(178, 34, 34, 0.8)',\n          'rgba(255, 140, 0, 0.8)', \n          'rgba(255, 215, 0, 0.8)',\n          'rgba(0, 128, 0, 0.8)',\n          'rgba(30, 144, 255, 0.8)',\n        ],\n        borderColor: [\n          'rgba(178, 34, 34, 1)',\n          'rgba(255, 140, 0, 1)', \n          'rgba(255, 215, 0, 1)',\n          'rgba(0, 128, 0, 1)',\n          'rgba(30, 144, 255, 1)',\n        ],\n        borderWidth: 2,\n      },\n    ],\n  } : {};\n  \n  const companyGraphOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: window.innerWidth < 768 ? 'bottom' : 'right',\n        labels: {\n          boxWidth: 10,\n          boxHeight: 10,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return `${tooltipItem.label}: ${tooltipItem.raw}`;\n          },\n        },\n      },\n    },\n  };\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSelect = (option) => {\n    setIsOpen(false);\n    setTextKey((prevKey) => prevKey + 1);\n    setDropdownText(option);\n  };\n\n  return (\n    <div>\n      <h1>How's The Job Market</h1>\n      <div className=\"dropdown-container\">\n        <div className=\"custom-dropdown\" onClick={toggleDropdown}>\n          <div className=\"custom-dropdown-selected\">\n            <span className={`arrow-down ${isOpen ? 'rotate-down' : 'rotate-right'}`}>&#9662;</span>\n            <span key={textKey} className=\"custom-dropdown-selected-text animate\"> {dropdownText}</span>\n          </div>\n          <div className={`custom-dropdown-options ${isOpen ? 'open' : ''}`}>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('Today')}>\n              Today\n            </div>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('This Week')}>\n              This Week\n            </div>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('This Month')}>\n              This Month\n            </div>\n          </div>\n        </div>\n        <span className=\"question-mark\">?</span>\n      </div>\n\n      <div className={`data-container ${fadeIn ? 'fade-in' : 'fade-out'}`}>\n        {selectedOption && !loading && Object.keys(data).length > 0 && (\n          <div> \n            <div className=\"section a\">\n              <div className=\"stat\">\n                <span className=\"stat-text\">Job Postings Are</span>\n                <span className={`stat-percent ${percentageChange < 0 ? 'negative' : 'positive'}`}> {postingsUpOrDown} {Math.abs(percentageChange)}% </span>\n                <span className=\"stat-timeframe\">{selectedOption}</span>\n              </div>\n              <div className=\"chart-container\">\n                <h1>New Job Postings</h1>\n                <Bar data={postingsGraphData} options={postingsGraphOptions} />\n              </div>\n            </div>\n            <div className=\"section b\">\n              <div className=\"stat\">\n                <span className=\"stat-text\">Base Salaries Are</span>\n                <span className={`stat-percent ${salaryChange < 0 ? 'negative' : 'positive'}`}> {salaryUpOrDown} ${Math.abs(salaryChange)}k </span>\n                <span className=\"stat-timeframe\">{selectedOption}</span>\n              </div>\n              <div className=\"chart-container\">\n                <h1>Average Base Salary</h1>\n                <Line data={salaryGraphData} options={salaryGraphOptions} />\n              </div>\n            </div>\n            <div className=\"section a\">\n              <div className=\"stat\">\n              <span className='stat-percent negative'> {topHirer} </span>\n                <span className=\"stat-text\">Has Posted The Most</span>\n                <span className=\"stat-timeframe\"> {selectedOption}</span>\n              </div>\n              <div className=\"chart-container doughnut\">\n                <h1>Top 5 Posting Companies</h1>\n                <Doughnut data={companyGraphData} options={companyGraphOptions} id=\"doughnut\"/>\n              </div>\n            </div>\n            <div className=\"section b\">\n              <div className=\"stat\">\n              <span className='stat-percent positive'> {abbrToState[topState]} </span>\n                <span className=\"stat-text\">Has Posted The Most</span>\n                <span className=\"stat-timeframe\"> {selectedOption}</span>\n              </div>\n              <div className=\"chart-container country-chart\">\n                <canvas id=\"countryChart\"></canvas>\n              </div>\n            </div>\n          </div>\n        )}\n        {/*{selectedOption == \"This Week\" && (\n          <div className=\"wip\">\n            <h1>More Data Required</h1>\n            <h1>Available Nov. 25</h1>\n          </div>\n        )},\n        {selectedOption == \"This Month\" && (\n          <div className=\"wip\">\n            <h1>More Data Required</h1>\n            <h1>Available Dec. 16</h1>\n          </div>\n        )}*/}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,iBAAiB;AACrD,SAAQC,KAAK,EAAEC,aAAa,QAAO,UAAU;AAC7C,SAAQC,QAAQ,EAAEC,oBAAoB,EAAEC,UAAU,EAAEC,eAAe,EAAEC,UAAU,QAAO,mBAAmB;AACzG,SAASN,KAAK,IAAIO,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,UAAU,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,KAAK,EAAEC,UAAU,QAAQ,UAAU;AACzJ,SAASC,EAAE,EAAEC,WAAW,EAAEC,WAAW,QAAO,4BAA4B;AACxE,OAAO,4BAA4B;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1BhB,OAAO,CAACiB,QAAQ,CAAChB,aAAa,EAAEC,WAAW,EAAEC,YAAY,EAAEC,UAAU,EAAEC,WAAW,EAAEK,UAAU,EAAEJ,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEvHf,KAAK,CAACwB,QAAQ,CAACrB,oBAAoB,EAAEC,UAAU,EAAEC,eAAe,EAAEC,UAAU,EAAE,GAAGL,aAAa,CAAC;AAE/F,MAAMwB,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmC,MAAM,EAAEC,SAAS,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACqC,OAAO,EAAEC,UAAU,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACuC,IAAI,EAAEC,OAAO,CAAC,GAAGxC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACyC,OAAO,EAAEC,UAAU,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC2C,KAAK,EAAEC,QAAQ,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC6C,MAAM,EAAEC,SAAS,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAAC+C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhD,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACiD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlD,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACmD,cAAc,EAAEC,iBAAiB,CAAC,GAAGpD,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACqD,YAAY,EAAEC,eAAe,CAAC,GAAGtD,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACuD,QAAQ,EAAEC,WAAW,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACyD,QAAQ,EAAEC,WAAW,CAAC,GAAG1D,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,IAAI,CAACkC,YAAY,EAAE,OAAO,CAAC;;IAE3Ba,SAAS,CAAC,KAAK,CAAC;IAChBa,UAAU,CAAC,MAAM;MACf3B,iBAAiB,CAACC,YAAY,CAAC;MAC/B,IAAI2B,SAAS;MACb,IAAI3B,YAAY,KAAK,OAAO,EAAE;QAC5B2B,SAAS,GAAG,KAAK;MACnB,CAAC,MACI,IAAI3B,YAAY,KAAK,WAAW,EAAE;QACrC2B,SAAS,GAAG,MAAM;MACpB,CAAC,MACI,IAAI3B,YAAY,KAAK,YAAY,EAAE;QACtC2B,SAAS,GAAG,OAAO;MACrB;MAEA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC5BjB,QAAQ,CAAC,IAAI,CAAC;QACdF,UAAU,CAAC,IAAI,CAAC;QAChB,IAAI;UACF,MAAMoB,QAAQ,GAAG,MAAMrC,KAAK,CAACsC,GAAG,CAAC,gCAAgCH,SAAS,EAAE,CAAC;UAC7EpB,OAAO,CAACsB,QAAQ,CAACvB,IAAI,CAAC;UACtBG,UAAU,CAAC,KAAK,CAAC;UACjBI,SAAS,CAAC,IAAI,CAAC;QACjB,CAAC,CAAC,OAAOkB,GAAG,EAAE;UACZpB,QAAQ,CAACoB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;QAClD;MACF,CAAC;MAEDJ,SAAS,CAAC,CAAC;IACb,CAAC,EAAE,GAAG,CAAC;EAET,CAAC,EAAE,CAAC5B,YAAY,CAAC,CAAC;EAElBlC,SAAS,CAAC,MAAM;IACd,IAAImE,MAAM,CAACC,IAAI,CAAC5B,IAAI,CAAC,CAAC6B,MAAM,KAAK,CAAC,EAAE;MAClClB,mBAAmB,CAAC,CAAC,CAAC;MACtBF,mBAAmB,CAAC,IAAI,CAAC;MACzB;IACF;IACA,IAAIqB,qBAAqB,GAAG,CAAC;IAC7B,IAAIhB,YAAY,GAAG,CAAC;IACpB,IAAId,IAAI,CAAC,GAAG,CAAC,IAAI,CAACA,IAAI,CAAC,GAAG,CAAC,EAAE;MAC3B8B,qBAAqB,GAAG,GAAG;MAC3BhB,YAAY,GAAGd,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;IAExC;IACA,IAAIA,IAAI,CAAC,GAAG,CAAC,IAAIA,IAAI,CAAC,GAAG,CAAC,EAAE;MAC1B8B,qBAAqB,GAAG,CAAE,CAAC9B,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,GAAGA,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAIA,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,GAAI,GAAG,EAAE+B,OAAO,CAAC,CAAC,CAAC;MACvHjB,YAAY,GAAG,CAACd,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,GAAGA,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,EAAE+B,OAAO,CAAC,CAAC,CAAC;IAC/E;IACApB,mBAAmB,CAACmB,qBAAqB,CAAC;IAC1CrB,mBAAmB,CAACqB,qBAAqB,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAE9Df,eAAe,CAACD,YAAY,CAAC;IAC7BD,iBAAiB,CAACC,YAAY,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC;IAEnD,IAAIkB,MAAM,GAAGL,MAAM,CAACC,IAAI,CAAC5B,IAAI,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAACiC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MAC5E,OAAOnC,IAAI,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,CAACmC,GAAG,CAAC,GAAGnC,IAAI,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,CAACkC,GAAG,CAAC,GAAGC,GAAG,GAAGD,GAAG;IAC9F,CAAC,CAAC;IACFjB,WAAW,CAACe,MAAM,CAAC;IAEnBA,MAAM,GAAGL,MAAM,CAACC,IAAI,CAAC5B,IAAI,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAACiC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;MACtE,OAAOnC,IAAI,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAACmC,GAAG,CAAC,GAAGnC,IAAI,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAACkC,GAAG,CAAC,GAAGC,GAAG,GAAGD,GAAG;IAC1F,CAAC,CAAC;IACFf,WAAW,CAACa,MAAM,CAAC;IAEnB,MAAMI,IAAI,GAAGC,QAAQ,CAACC,eAAe;IACrCF,IAAI,CAACG,KAAK,CAACC,WAAW,CAAC,iBAAiB,EAAEV,qBAAqB,GAAG,CAAC,GAAG,WAAW,GAAG,OAAO,CAAC;IAE5F,MAAMW,MAAM,GAAG1E,QAAQ,CAAC2E,OAAO,CAAC3D,EAAE,EAAEA,EAAE,CAAC4D,OAAO,CAACF,MAAM,CAAC,CAACG,QAAQ,CAAC,CAAC,CAAC;IAClE,MAAMC,MAAM,GAAG9E,QAAQ,CAAC2E,OAAO,CAAC3D,EAAE,EAAEA,EAAE,CAAC4D,OAAO,CAACE,MAAM,CAAC,CAACD,QAAQ;IAE/D,MAAME,KAAK,GAAG,IAAIjF,KAAK,CAACwE,QAAQ,CAACU,cAAc,CAAC,cAAc,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC,EAAE;MAChFC,IAAI,EAAE,YAAY;MAClBjD,IAAI,EAAE;QACJkD,MAAM,EAAEL,MAAM,CAACM,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,UAAU,CAACC,IAAI,CAAC;QAC5CC,QAAQ,EAAE,CAAC;UACTC,KAAK,EAAE,QAAQ;UACfC,OAAO,EAAEhB,MAAM;UACfzC,IAAI,EAAE6C,MAAM,CAACM,GAAG,CAAEC,CAAC,KAAM;YAACV,OAAO,EAAEU,CAAC;YAAEM,KAAK,EAAE1D,IAAI,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAChB,WAAW,CAACoE,CAAC,CAACC,UAAU,CAACC,IAAI,CAAC;UAAC,CAAC,CAAC;QAC7G,CAAC;MACH,CAAC;MACDK,OAAO,EAAE;QACPC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,OAAO,EAAE;UACX;QACF,CAAC;QACDC,MAAM,EAAE;UACNC,UAAU,EAAE;YACVC,IAAI,EAAE,GAAG;YACTD,UAAU,EAAE;UACd,CAAC;UACDE,KAAK,EAAE;YACLD,IAAI,EAAE,GAAG;YACTJ,MAAM,EAAE;cACNM,QAAQ,EAAE,cAAc;cACxBC,KAAK,EAAEC,MAAM,CAACC,UAAU,GAAG,GAAG,GAAG,OAAO,GAAG;YAC7C,CAAC;YACDC,WAAW,EAAE,QAAQ;YACrBC,KAAK,EAAE;cACLC,QAAQ,EAAE,SAAAA,CAASf,KAAK,EAAE;gBACxB,OAAOgB,IAAI,CAACC,KAAK,CAACjB,KAAK,CAAC;cAC1B;YACF;UACF;QACF;MACF;IACF,CAAC,CAAC;IACFZ,KAAK,CAAC8B,MAAM,CAAC,CAAC;EAChB,CAAC,EAAE,CAAC5E,IAAI,CAAC,CAAC;EAEV,MAAM6E,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,CAAC;IAEvE,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACxB,MAAMC,UAAU,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC,CAAC,CAAE;;IAEpC;IACA,IAAIhC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIiC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxD,MAAM,CAACC,IAAI,CAAC5B,IAAI,CAAC,CAAC6B,MAAM,EAAEsD,CAAC,EAAE,EAAE;MACjD;MACA,MAAMC,UAAU,GAAG,CAACH,UAAU,GAAGtD,MAAM,CAACC,IAAI,CAAC5B,IAAI,CAAC,CAAC6B,MAAM,GAAG,CAAC,GAAEsD,CAAC,IAAI,CAAC;MACrEjC,MAAM,CAACmC,IAAI,CAACP,UAAU,CAACM,UAAU,CAAC,CAAC;IACrC;IAEA,OAAOlC,MAAM;EACf,CAAC;EAED,MAAMoC,aAAa,GAAGA,CAAA,KAAM;IAC1B,OAAO3D,MAAM,CAAC4D,MAAM,CAACvF,IAAI,CAAC,CAACmD,GAAG,CAACqC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAEtG,MAAMb,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACxB,MAAMC,UAAU,GAAGF,KAAK,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAE;;IAEtC,IAAI3C,MAAM,GAAG,EAAE;IACf,KAAK,IAAIiC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxD,MAAM,CAACC,IAAI,CAAC5B,IAAI,CAAC,CAAC6B,MAAM,EAAEsD,CAAC,EAAE,EAAE;MACjD;MACA,MAAMC,UAAU,GAAG,CAACH,UAAU,GAAGtD,MAAM,CAACC,IAAI,CAAC5B,IAAI,CAAC,CAAC6B,MAAM,GAAG,EAAE,GAAGsD,CAAC,IAAI,EAAE;MACxEjC,MAAM,CAACmC,IAAI,CAACO,MAAM,CAACR,UAAU,CAAC,CAAC;IACjC;IAEA,OAAOlC,MAAM;EACf,CAAC;EAED,MAAM4C,iBAAiB,GAAG9F,IAAI,GAAG;IAC/BkD,MAAM,EAAEvB,MAAM,CAAC4D,MAAM,CAACvF,IAAI,CAAC,CAACmD,GAAG,CAACqC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAACC,OAAO,CAAC,CAAC;IAC9DnC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,WAAW;MAClBxD,IAAI,EAAE2B,MAAM,CAAC4D,MAAM,CAACvF,IAAI,CAAC,CAACmD,GAAG,CAACqC,KAAK,IAAIA,KAAK,CAACO,SAAS,CAAC,CAACL,OAAO,CAAC,CAAC;MACjEM,eAAe,EAAErE,MAAM,CAAC4D,MAAM,CAACvF,IAAI,CAAC,CAAC0F,OAAO,CAAC,CAAC,CAACvC,GAAG,CAAC,CAACqC,KAAK,EAAES,KAAK,EAAEC,KAAK,KAAK;QAC1E,IAAID,KAAK,KAAK,CAAC,EAAE;UACf,OAAO,uBAAuB;QAChC;QACA;QACA,MAAME,gBAAgB,GAAGD,KAAK,CAACD,KAAK,GAAG,CAAC,CAAC,CAACF,SAAS,CAAC,CAAC;QACrD,OAAOP,KAAK,CAACO,SAAS,GAAGI,gBAAgB,GAAG,yBAAyB,GAAG,uBAAuB,CAAC,CAAE;MACpG,CAAC,CAAC;MACFC,WAAW,EAAE,MAAM;MACnBC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC,GAAG,CAAC,CAAC;EAEN,MAAMC,oBAAoB,GAAG;IAC3BC,mBAAmB,EAAE,KAAK;IAC1BC,UAAU,EAAE,IAAI;IAChB5C,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX,CAAC;MACD2C,OAAO,EAAE;QACPC,SAAS,EAAE;UACTlD,KAAK,EAAGmD,WAAW,IAAK;YACtB,OAAO,cAAcA,WAAW,CAACC,GAAG,EAAE;UACxC;QACF;MACF;IACF,CAAC;IACD7C,MAAM,EAAE;MACN8C,CAAC,EAAE;QACDC,IAAI,EAAE;UACJhD,OAAO,EAAE;QACX,CAAC;QACDZ,MAAM,EAAE1D,cAAc,KAAK,OAAO,GAAGqF,cAAc,CAAC,CAAC,GACpDrF,cAAc,KAAK,WAAW,GAAG8F,aAAa,CAAC,CAAC,GAChD9F,cAAc,KAAK,YAAY,GAAGmG,cAAc,CAAC,CAAC,GAAG,EAAI;QAC1DnB,KAAK,EAAE;UACLuC,WAAW,EAAE1C,MAAM,CAACC,UAAU,GAAG,GAAG,GAAG,EAAE,GAAG;QAC9C;MACF;IACF;EACF,CAAC;EAED,MAAM0C,eAAe,GAAGhH,IAAI,GAAG;IAC7BkD,MAAM,EAAEvB,MAAM,CAAC4D,MAAM,CAACvF,IAAI,CAAC,CAACmD,GAAG,CAACqC,KAAK,IAAIA,KAAK,CAACyB,UAAU,CAAC,CAACvB,OAAO,CAAC,CAAC;IACpEnC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,gBAAgB;MACvBxD,IAAI,EAAE2B,MAAM,CAAC4D,MAAM,CAACvF,IAAI,CAAC,CAACmD,GAAG,CAACqC,KAAK,IAAIA,KAAK,CAACyB,UAAU,CAAC,CAACvB,OAAO,CAAC,CAAC;MAClEM,eAAe,EAAErE,MAAM,CAAC4D,MAAM,CAACvF,IAAI,CAAC,CAAC0F,OAAO,CAAC,CAAC,CAACvC,GAAG,CAAC,CAACqC,KAAK,EAAES,KAAK,EAAEC,KAAK,KAAK;QAC1E,IAAID,KAAK,KAAK,CAAC,EAAE;UACf,OAAO,gBAAgB;QACzB;QACA,MAAMiB,cAAc,GAAGhB,KAAK,CAACD,KAAK,GAAG,CAAC,CAAC,CAACgB,UAAU,CAAC,CAAC;QACpD,OAAOzB,KAAK,CAACyB,UAAU,GAAGC,cAAc,GAAG,kBAAkB,GAAG,gBAAgB,CAAC,CAAE;MACrF,CAAC,CAAC;MACFd,WAAW,EAAE,MAAM;MACnBe,gBAAgB,EAAE,MAAM;MACxBC,gBAAgB,EAAE,CAAC;MACnBf,WAAW,EAAE,CAAC;MACdgB,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC,GAAG,CAAC,CAAC;EAEN,MAAMC,kBAAkB,GAAG;IACzBjB,mBAAmB,EAAE,KAAK;IAC1BC,UAAU,EAAE,IAAI;IAChB5C,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX,CAAC;MACD2C,OAAO,EAAE;QACPC,SAAS,EAAE;UACTlD,KAAK,EAAGmD,WAAW,IAAK;YACtB,OAAO,mBAAmBA,WAAW,CAACC,GAAG,GAAG;UAC9C;QACF;MACF;IACF,CAAC;IACD7C,MAAM,EAAE;MACN8C,CAAC,EAAE;QACDC,IAAI,EAAE;UACJhD,OAAO,EAAE;QACX,CAAC;QACDZ,MAAM,EAAE1D,cAAc,KAAK,OAAO,GAAGqF,cAAc,CAAC,CAAC,GACpDrF,cAAc,KAAK,WAAW,GAAG8F,aAAa,CAAC,CAAC,GAChD9F,cAAc,KAAK,YAAY,GAAGmG,cAAc,CAAC,CAAC,GAAG,EAAI;QAC1DnB,KAAK,EAAE;UACLuC,WAAW,EAAE1C,MAAM,CAACC,UAAU,GAAG,GAAG,GAAG,EAAE,GAAG;QAC9C;MACF,CAAC;MACDmD,CAAC,EAAE;QACDC,WAAW,EAAE,KAAK;QAClBC,GAAG,EAAEjD,IAAI,CAACC,KAAK,CAACD,IAAI,CAACiD,GAAG,CAAC,GAAGhG,MAAM,CAAC4D,MAAM,CAACvF,IAAI,CAAC,CAACmD,GAAG,CAACqC,KAAK,IAAIA,KAAK,CAACyB,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;QACpFzC,KAAK,EAAE;UACLC,QAAQ,EAAE,SAAAA,CAASf,KAAK,EAAE;YACxB,OAAO,GAAGA,KAAK,GAAG;UACpB;QACF;MACF;IACF;EACF,CAAC;EAED,MAAMkE,gBAAgB,GAAG5H,IAAI,IAAIA,IAAI,CAAC,GAAG,CAAC,IAAIA,IAAI,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,GAAG;IAC7EkD,MAAM,EAAEvB,MAAM,CAACC,IAAI,CAAC5B,IAAI,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,CAAC;IACnDuD,QAAQ,EAAE,CACR;MACEvD,IAAI,EAAE2B,MAAM,CAAC4D,MAAM,CAACvF,IAAI,CAAC,GAAG,CAAC,CAAC,mBAAmB,CAAC,CAAC;MACnDgG,eAAe,EAAE,CACf,wBAAwB,EACxB,wBAAwB,EACxB,wBAAwB,EACxB,sBAAsB,EACtB,yBAAyB,CAC1B;MACDI,WAAW,EAAE,CACX,sBAAsB,EACtB,sBAAsB,EACtB,sBAAsB,EACtB,oBAAoB,EACpB,uBAAuB,CACxB;MACDC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC,GAAG,CAAC,CAAC;EAEN,MAAMwB,mBAAmB,GAAG;IAC1BrB,UAAU,EAAE,IAAI;IAChB5C,OAAO,EAAE;MACPC,MAAM,EAAE;QACNM,QAAQ,EAAEE,MAAM,CAACC,UAAU,GAAG,GAAG,GAAG,QAAQ,GAAG,OAAO;QACtDpB,MAAM,EAAE;UACN4E,QAAQ,EAAE,EAAE;UACZC,SAAS,EAAE;QACb;MACF,CAAC;MACDtB,OAAO,EAAE;QACPC,SAAS,EAAE;UACTlD,KAAK,EAAE,SAAAA,CAAUmD,WAAW,EAAE;YAC5B,OAAO,GAAGA,WAAW,CAACnD,KAAK,KAAKmD,WAAW,CAACC,GAAG,EAAE;UACnD;QACF;MACF;IACF;EACF,CAAC;EAED,MAAMoB,cAAc,GAAGA,CAAA,KAAM;IAC3BnI,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMqI,YAAY,GAAIC,MAAM,IAAK;IAC/BrI,SAAS,CAAC,KAAK,CAAC;IAChBE,UAAU,CAAEoI,OAAO,IAAKA,OAAO,GAAG,CAAC,CAAC;IACpCxI,eAAe,CAACuI,MAAM,CAAC;EACzB,CAAC;EAED,oBACE9I,OAAA;IAAAgJ,QAAA,gBACEhJ,OAAA;MAAAgJ,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BpJ,OAAA;MAAKqJ,SAAS,EAAC,oBAAoB;MAAAL,QAAA,gBACjChJ,OAAA;QAAKqJ,SAAS,EAAC,iBAAiB;QAACC,OAAO,EAAEV,cAAe;QAAAI,QAAA,gBACvDhJ,OAAA;UAAKqJ,SAAS,EAAC,0BAA0B;UAAAL,QAAA,gBACvChJ,OAAA;YAAMqJ,SAAS,EAAE,cAAc7I,MAAM,GAAG,aAAa,GAAG,cAAc,EAAG;YAAAwI,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACxFpJ,OAAA;YAAoBqJ,SAAS,EAAC,uCAAuC;YAAAL,QAAA,GAAC,GAAC,EAAC1I,YAAY;UAAA,GAAzEI,OAAO;YAAAuI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAyE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzF,CAAC,eACNpJ,OAAA;UAAKqJ,SAAS,EAAE,2BAA2B7I,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;UAAAwI,QAAA,gBAChEhJ,OAAA;YAAKqJ,SAAS,EAAC,wBAAwB;YAACC,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAAC,OAAO,CAAE;YAAAG,QAAA,EAAC;UAE9E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNpJ,OAAA;YAAKqJ,SAAS,EAAC,wBAAwB;YAACC,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAAC,WAAW,CAAE;YAAAG,QAAA,EAAC;UAElF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACNpJ,OAAA;YAAKqJ,SAAS,EAAC,wBAAwB;YAACC,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAAC,YAAY,CAAE;YAAAG,QAAA,EAAC;UAEnF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNpJ,OAAA;QAAMqJ,SAAS,EAAC,eAAe;QAAAL,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAENpJ,OAAA;MAAKqJ,SAAS,EAAE,kBAAkBnI,MAAM,GAAG,SAAS,GAAG,UAAU,EAAG;MAAA8H,QAAA,EACjE5I,cAAc,IAAI,CAACU,OAAO,IAAIyB,MAAM,CAACC,IAAI,CAAC5B,IAAI,CAAC,CAAC6B,MAAM,GAAG,CAAC,iBACzDzC,OAAA;QAAAgJ,QAAA,gBACEhJ,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAL,QAAA,gBACxBhJ,OAAA;YAAKqJ,SAAS,EAAC,MAAM;YAAAL,QAAA,gBACnBhJ,OAAA;cAAMqJ,SAAS,EAAC,WAAW;cAAAL,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACnDpJ,OAAA;cAAMqJ,SAAS,EAAE,gBAAgB/H,gBAAgB,GAAG,CAAC,GAAG,UAAU,GAAG,UAAU,EAAG;cAAA0H,QAAA,GAAC,GAAC,EAAC5H,gBAAgB,EAAC,GAAC,EAACkE,IAAI,CAACiE,GAAG,CAACjI,gBAAgB,CAAC,EAAC,IAAE;YAAA;cAAA2H,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC5IpJ,OAAA;cAAMqJ,SAAS,EAAC,gBAAgB;cAAAL,QAAA,EAAE5I;YAAc;cAAA6I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC,eACNpJ,OAAA;YAAKqJ,SAAS,EAAC,iBAAiB;YAAAL,QAAA,gBAC9BhJ,OAAA;cAAAgJ,QAAA,EAAI;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACzBpJ,OAAA,CAAC1B,GAAG;cAACsC,IAAI,EAAE8F,iBAAkB;cAACnC,OAAO,EAAE2C;YAAqB;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNpJ,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAL,QAAA,gBACxBhJ,OAAA;YAAKqJ,SAAS,EAAC,MAAM;YAAAL,QAAA,gBACnBhJ,OAAA;cAAMqJ,SAAS,EAAC,WAAW;cAAAL,QAAA,EAAC;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACpDpJ,OAAA;cAAMqJ,SAAS,EAAE,gBAAgB3H,YAAY,GAAG,CAAC,GAAG,UAAU,GAAG,UAAU,EAAG;cAAAsH,QAAA,GAAC,GAAC,EAACxH,cAAc,EAAC,IAAE,EAAC8D,IAAI,CAACiE,GAAG,CAAC7H,YAAY,CAAC,EAAC,IAAE;YAAA;cAAAuH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACnIpJ,OAAA;cAAMqJ,SAAS,EAAC,gBAAgB;cAAAL,QAAA,EAAE5I;YAAc;cAAA6I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC,eACNpJ,OAAA;YAAKqJ,SAAS,EAAC,iBAAiB;YAAAL,QAAA,gBAC9BhJ,OAAA;cAAAgJ,QAAA,EAAI;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5BpJ,OAAA,CAACzB,IAAI;cAACqC,IAAI,EAAEgH,eAAgB;cAACrD,OAAO,EAAE6D;YAAmB;cAAAa,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNpJ,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAL,QAAA,gBACxBhJ,OAAA;YAAKqJ,SAAS,EAAC,MAAM;YAAAL,QAAA,gBACrBhJ,OAAA;cAAMqJ,SAAS,EAAC,uBAAuB;cAAAL,QAAA,GAAC,GAAC,EAACpH,QAAQ,EAAC,GAAC;YAAA;cAAAqH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACzDpJ,OAAA;cAAMqJ,SAAS,EAAC,WAAW;cAAAL,QAAA,EAAC;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtDpJ,OAAA;cAAMqJ,SAAS,EAAC,gBAAgB;cAAAL,QAAA,GAAC,GAAC,EAAC5I,cAAc;YAAA;cAAA6I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC,eACNpJ,OAAA;YAAKqJ,SAAS,EAAC,0BAA0B;YAAAL,QAAA,gBACvChJ,OAAA;cAAAgJ,QAAA,EAAI;YAAuB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChCpJ,OAAA,CAACxB,QAAQ;cAACoC,IAAI,EAAE4H,gBAAiB;cAACjE,OAAO,EAAEkE,mBAAoB;cAACe,EAAE,EAAC;YAAU;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNpJ,OAAA;UAAKqJ,SAAS,EAAC,WAAW;UAAAL,QAAA,gBACxBhJ,OAAA;YAAKqJ,SAAS,EAAC,MAAM;YAAAL,QAAA,gBACrBhJ,OAAA;cAAMqJ,SAAS,EAAC,uBAAuB;cAAAL,QAAA,GAAC,GAAC,EAACnJ,WAAW,CAACiC,QAAQ,CAAC,EAAC,GAAC;YAAA;cAAAmH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtEpJ,OAAA;cAAMqJ,SAAS,EAAC,WAAW;cAAAL,QAAA,EAAC;YAAmB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtDpJ,OAAA;cAAMqJ,SAAS,EAAC,gBAAgB;cAAAL,QAAA,GAAC,GAAC,EAAC5I,cAAc;YAAA;cAAA6I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC,eACNpJ,OAAA;YAAKqJ,SAAS,EAAC,+BAA+B;YAAAL,QAAA,eAC5ChJ,OAAA;cAAQwJ,EAAE,EAAC;YAAc;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjJ,EAAA,CAraID,GAAG;AAAAuJ,EAAA,GAAHvJ,GAAG;AAuaT,eAAeA,GAAG;AAAC,IAAAuJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}