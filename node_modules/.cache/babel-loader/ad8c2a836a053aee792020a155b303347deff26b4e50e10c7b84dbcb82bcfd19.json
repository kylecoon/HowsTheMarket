{"ast":null,"code":"var _jsxFileName = \"/Users/kylecoon/Desktop/HowsTheMarket/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend, Ticks } from 'chart.js';\nimport './assets/styles/styles.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend);\nconst App = () => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [textKey, setTextKey] = useState(0);\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [fadeIn, setFadeIn] = useState(true);\n  const [postingsUpOrDown, setPostingsUpOrDown] = useState(\"Up\");\n  const [percentageChange, setPercentageChange] = useState(null);\n  const [salaryUpOrDown, setSalaryUpOrDown] = useState(\"Up\");\n  const [salaryChange, setSalaryChange] = useState(0);\n  useEffect(() => {\n    if (!selectedOption) return; // Don't fetch until an option is selected\n\n    let timeframe;\n    if (selectedOption === \"Today\") {\n      timeframe = \"day\";\n    } else if (selectedOption === \"This Week\") {\n      timeframe = \"week\";\n    } else if (selectedOption === \"This Month\") {\n      timeframe = \"month\";\n    }\n    const fetchData = async () => {\n      setError(null);\n      setLoading(true);\n      try {\n        const response = await axios.get(`http://192.168.0.93:5001/api/${timeframe}`);\n        setData(response.data);\n        setTimeout(() => {\n          setLoading(false);\n          setFadeIn(true);\n        }, 100);\n      } catch (err) {\n        setError(err.message || 'Something went wrong!');\n      }\n    };\n    fetchData();\n  }, [selectedOption]);\n  useEffect(() => {\n    if (Object.keys(data).length === 0) {\n      setPercentageChange(0);\n      setPostingsUpOrDown(\"Up\");\n      return;\n    }\n    let postingsPercentChange = 0;\n    let salaryChange = 0;\n    if (data[\"0\"] && !data[\"1\"]) {\n      postingsPercentChange = 100;\n      salaryChange = data[\"0\"][\"avg_salary\"];\n    }\n    if (data[\"0\"] && data[\"1\"]) {\n      postingsPercentChange = ((data[\"0\"][\"job_count\"] - data[\"1\"][\"job_count\"]) / data[\"1\"][\"job_count\"] * 100).toFixed(1);\n      salaryChange = (data[\"0\"][\"avg_salary\"] - data[\"1\"][\"avg_salary\"]).toFixed(1);\n    }\n    setPercentageChange(postingsPercentChange);\n    setPostingsUpOrDown(postingsPercentChange < 0 ? \"Down\" : \"Up\");\n    setSalaryChange(salaryChange);\n    setSalaryUpOrDown(salaryChange < 0 ? \"Down\" : \"Up\");\n    const root = document.documentElement;\n    root.style.setProperty('--primary-color', postingsPercentChange < 0 ? 'firebrick' : 'green');\n  }, [data]);\n  const getTodayLabels = () => {\n    const daysOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n    const today = new Date();\n    const currentDay = today.getDay(); // 0 (Sunday) to 6 (Saturday)\n\n    // Generate the labels array\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 8 + i) % 7;\n      labels.push(daysOfWeek[labelIndex]);\n    }\n    return labels;\n  };\n  const getWeekLabels = () => {\n    return Object.values(data).map(entry => entry.date).reverse();\n  };\n  const getMonthLabels = () => {\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    const today = new Date();\n    const currentDay = today.getMonth(); // 0 (January) to 11 (December)\n\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 13 + i) % 12;\n      labels.push(months[labelIndex]);\n    }\n    return labels;\n  };\n  const postingsGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.date).reverse(),\n    datasets: [{\n      label: 'Job Count',\n      data: Object.values(data).map(entry => entry.job_count).reverse(),\n      backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n        if (index === 0) {\n          return 'rgba(0, 128, 0, 0.85)'; // First bar is gray (no comparison to the previous value)\n        }\n        // Compare current job_count with the previous one\n        const previousJobCount = array[index - 1].job_count; // Get the previous job_count\n        return entry.job_count < previousJobCount ? 'rgba(178, 34, 34, 0.85)' : 'rgba(0, 128, 0, 0.85)'; // Red if lower, green if higher\n      }),\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  } : {};\n  const postingsGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: tooltipItem => {\n            return `Job Count: ${tooltipItem.raw}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : selectedOption === \"This Week\" ? getWeekLabels() : selectedOption === \"This Month\" ? getMonthLabels() : []\n      }\n    }\n  };\n  const salaryGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.avg_salary).reverse(),\n    datasets: [{\n      label: 'Average Salary',\n      data: Object.values(data).map(entry => entry.avg_salary).reverse(),\n      backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n        if (index === 0) {\n          return 'rgb(0, 128, 0)';\n        }\n        const previousSalary = array[index - 1].avg_salary; // Get the previous job_count\n        return entry.avg_salary < previousSalary ? 'rgb(178, 34, 34)' : 'rgb(0, 128, 0)'; // Red if lower, green if higher\n      }),\n      segment: {\n        borderColor: ctx => {\n          const {\n            p0,\n            p1\n          } = ctx;\n          return p0.y >= p1.y ? 'rgba(0, 128, 0, 0.85)' : 'rgba(178, 34, 34, 0.85)';\n        }\n      },\n      pointBorderColor: '#333',\n      pointBorderWidth: 2,\n      borderWidth: 5,\n      pointRadius: 10,\n      hoverRadius: 12.5\n    }]\n  } : {};\n  const salaryGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: tooltipItem => {\n            return `Average Salary: ${tooltipItem.raw}k`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : selectedOption === \"This Week\" ? getWeekLabels() : selectedOption === \"This Month\" ? getMonthLabels() : []\n      },\n      y: {\n        beginAtZero: false,\n        min: Math.floor(Math.min(...Object.values(data).map(entry => entry.avg_salary)) - 3),\n        ticks: {\n          callback: function (value) {\n            return `${value}k`; // Append 'k' to each y-axis label\n          }\n        }\n      }\n    }\n  };\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSelect = option => {\n    setIsOpen(false);\n    setTextKey(prevKey => prevKey + 1);\n    setSelectedOption(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How's The Job Market\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-dropdown\",\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-dropdown-selected\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `arrow-down ${isOpen ? 'rotate-down' : 'rotate-right'}`,\n            children: \"\\u25BE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"custom-dropdown-selected-text animate\",\n            children: [\" \", selectedOption]\n          }, textKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `custom-dropdown-options ${isOpen ? 'open' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('Today'),\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('This Week'),\n            children: \"This Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('This Month'),\n            children: \"This Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"question-mark\",\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `data-container ${fadeIn ? 'fade-in' : 'fade-out'}`,\n      children: !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-text\",\n            children: \"Job Postings Are\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `stat-percent ${percentageChange < 0 ? 'negative' : 'positive'}`,\n            children: [\" \", postingsUpOrDown, \" \", Math.abs(percentageChange), \"% \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-timeframe\",\n            children: selectedOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"New Job Postings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            data: postingsGraphData,\n            options: postingsGraphOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-text\",\n            children: \"Base Salaries Are\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `stat-percent ${salaryChange < 0 ? 'negative' : 'positive'}`,\n            children: [\" \", salaryUpOrDown, \" $\", Math.abs(salaryChange), \"k \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-timeframe\",\n            children: selectedOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Average Base Salary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            data: salaryGraphData,\n            options: salaryGraphOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uxi8qn1AHH8QXh4H0WzWd4Lc4Lg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","LineElement","Title","Tooltip","Legend","Ticks","axios","jsxDEV","_jsxDEV","register","App","_s","selectedOption","setSelectedOption","isOpen","setIsOpen","textKey","setTextKey","data","setData","loading","setLoading","error","setError","fadeIn","setFadeIn","postingsUpOrDown","setPostingsUpOrDown","percentageChange","setPercentageChange","salaryUpOrDown","setSalaryUpOrDown","salaryChange","setSalaryChange","timeframe","fetchData","response","get","setTimeout","err","message","Object","keys","length","postingsPercentChange","toFixed","root","document","documentElement","style","setProperty","getTodayLabels","daysOfWeek","today","Date","currentDay","getDay","labels","i","labelIndex","push","getWeekLabels","values","map","entry","date","reverse","getMonthLabels","months","getMonth","postingsGraphData","datasets","label","job_count","backgroundColor","index","array","previousJobCount","borderColor","borderWidth","postingsGraphOptions","maintainAspectRatio","responsive","plugins","legend","display","tooltip","callbacks","tooltipItem","raw","scales","x","grid","salaryGraphData","avg_salary","previousSalary","segment","ctx","p0","p1","y","pointBorderColor","pointBorderWidth","pointRadius","hoverRadius","salaryGraphOptions","beginAtZero","min","Math","floor","ticks","callback","value","toggleDropdown","handleSelect","option","prevKey","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","abs","options","_c","$RefreshReg$"],"sources":["/Users/kylecoon/Desktop/HowsTheMarket/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend, Ticks } from 'chart.js';\nimport './assets/styles/styles.css';\nimport axios from 'axios';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend);\n\nconst App = () => {\n  const [selectedOption, setSelectedOption] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [textKey, setTextKey] = useState(0);\n  const [data, setData] = useState({}); \n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null); \n  const [fadeIn, setFadeIn] = useState(true);\n  const [postingsUpOrDown, setPostingsUpOrDown] = useState(\"Up\"); \n  const [percentageChange, setPercentageChange] = useState(null);\n  const [salaryUpOrDown, setSalaryUpOrDown] = useState(\"Up\")\n  const [salaryChange, setSalaryChange] = useState(0)\n\n  useEffect(() => {\n    if (!selectedOption) return; // Don't fetch until an option is selected\n\n    let timeframe;\n    if (selectedOption === \"Today\") {\n      timeframe = \"day\";\n    }\n    else if (selectedOption === \"This Week\") {\n      timeframe = \"week\";\n    }\n    else if (selectedOption === \"This Month\") {\n      timeframe = \"month\";\n    }\n\n    const fetchData = async () => {\n      setError(null);\n      setLoading(true);\n      try {\n        const response = await axios.get(`http://192.168.0.93:5001/api/${timeframe}`);\n        setData(response.data);\n        setTimeout(() => {\n          setLoading(false);\n          setFadeIn(true);\n        }, 100);\n      } catch (err) {\n        setError(err.message || 'Something went wrong!');\n      }\n    };\n\n    fetchData();\n  }, [selectedOption]);\n\n  useEffect(() => {\n    if (Object.keys(data).length === 0) {\n      setPercentageChange(0);\n      setPostingsUpOrDown(\"Up\");\n      return;\n    }\n    let postingsPercentChange = 0;\n    let salaryChange = 0;\n    if (data[\"0\"] && !data[\"1\"]) {\n      postingsPercentChange = 100;\n      salaryChange = data[\"0\"][\"avg_salary\"]\n\n    }\n    if (data[\"0\"] && data[\"1\"]) {\n      postingsPercentChange = (((data[\"0\"][\"job_count\"] - data[\"1\"][\"job_count\"]) / data[\"1\"][\"job_count\"]) * 100).toFixed(1);\n      salaryChange = (data[\"0\"][\"avg_salary\"] - data[\"1\"][\"avg_salary\"]).toFixed(1);\n    }\n    setPercentageChange(postingsPercentChange);\n    setPostingsUpOrDown(postingsPercentChange < 0 ? \"Down\" : \"Up\");\n\n    setSalaryChange(salaryChange);\n    setSalaryUpOrDown(salaryChange < 0 ? \"Down\" : \"Up\");\n\n    const root = document.documentElement;\n    root.style.setProperty('--primary-color', postingsPercentChange < 0 ? 'firebrick' : 'green');\n  }, [data]); \n\n  const getTodayLabels = () => {\n    const daysOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n    \n    const today = new Date();\n    const currentDay = today.getDay();  // 0 (Sunday) to 6 (Saturday)\n    \n    // Generate the labels array\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 8+ i) % 7;\n      labels.push(daysOfWeek[labelIndex]);\n    }\n    \n    return labels;\n  };\n\n  const getWeekLabels = () => {\n    return Object.values(data).map(entry => entry.date).reverse();\n  };\n\n  const getMonthLabels = () => {\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    \n    const today = new Date();\n    const currentDay = today.getMonth();  // 0 (January) to 11 (December)\n    \n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 13 + i) % 12;\n      labels.push(months[labelIndex]);\n    }\n    \n    return labels;\n  };\n\n  const postingsGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.date).reverse(),  \n    datasets: [\n      {\n        label: 'Job Count',\n        data: Object.values(data).map(entry => entry.job_count).reverse(),  \n        backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n          if (index === 0) {\n            return 'rgba(0, 128, 0, 0.85)';  // First bar is gray (no comparison to the previous value)\n          }\n          // Compare current job_count with the previous one\n          const previousJobCount = array[index - 1].job_count; // Get the previous job_count\n          return entry.job_count < previousJobCount ? 'rgba(178, 34, 34, 0.85)' : 'rgba(0, 128, 0, 0.85)';  // Red if lower, green if higher\n        }),\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n    ],\n  } : {};\n\n  const postingsGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        callbacks: {\n          label: (tooltipItem) => {\n            return `Job Count: ${tooltipItem.raw}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false, \n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : \n        (selectedOption === \"This Week\" ? getWeekLabels() :\n        (selectedOption === \"This Month\" ? getMonthLabels() : [])),\n      },\n    },\n  };\n\n  const salaryGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.avg_salary).reverse(),  \n    datasets: [\n      {\n        label: 'Average Salary',\n        data: Object.values(data).map(entry => entry.avg_salary).reverse(),  \n        backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n          if (index === 0) {\n            return 'rgb(0, 128, 0)'; \n          }\n          const previousSalary = array[index - 1].avg_salary; // Get the previous job_count\n          return entry.avg_salary < previousSalary ? 'rgb(178, 34, 34)' : 'rgb(0, 128, 0)';  // Red if lower, green if higher\n        }),\n        segment: {\n          borderColor: (ctx) => {\n            const { p0, p1 } = ctx;\n            return p0.y >= p1.y ? 'rgba(0, 128, 0, 0.85)' : 'rgba(178, 34, 34, 0.85)';\n          },\n        },\n        pointBorderColor: '#333',\n        pointBorderWidth: 2,\n        borderWidth: 5,\n        pointRadius: 10,\n        hoverRadius: 12.5,\n      },\n    ],\n  } : {};\n\n  const salaryGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        callbacks: {\n          label: (tooltipItem) => {\n            return `Average Salary: ${tooltipItem.raw}k`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false, \n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : \n        (selectedOption === \"This Week\" ? getWeekLabels() :\n        (selectedOption === \"This Month\" ? getMonthLabels() : [])),\n      },\n      y: {\n        beginAtZero: false, \n        min: Math.floor(Math.min(...Object.values(data).map(entry => entry.avg_salary)) - 3),  \n        ticks: {\n          callback: function(value) {\n            return `${value}k`; // Append 'k' to each y-axis label\n          },\n        },\n      },\n    },\n  };\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSelect = (option) => {\n    setIsOpen(false);\n    setTextKey((prevKey) => prevKey + 1);\n    setSelectedOption(option);\n  };\n\n  return (\n    <div>\n      <h1>How's The Job Market</h1>\n      <div className=\"dropdown-container\">\n        <div className=\"custom-dropdown\" onClick={toggleDropdown}>\n          <div className=\"custom-dropdown-selected\">\n            <span className={`arrow-down ${isOpen ? 'rotate-down' : 'rotate-right'}`}>&#9662;</span>\n            <span key={textKey} className=\"custom-dropdown-selected-text animate\"> {selectedOption}</span>\n          </div>\n          <div className={`custom-dropdown-options ${isOpen ? 'open' : ''}`}>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('Today')}>\n              Today\n            </div>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('This Week')}>\n              This Week\n            </div>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('This Month')}>\n              This Month\n            </div>\n          </div>\n        </div>\n        <span className=\"question-mark\">?</span>\n      </div>\n\n      <div className={`data-container ${fadeIn ? 'fade-in' : 'fade-out'}`}>\n        {!loading && (\n          <div> \n            <div className=\"stat\">\n              <span className=\"stat-text\">Job Postings Are</span>\n              <span className={`stat-percent ${percentageChange < 0 ? 'negative' : 'positive'}`}> {postingsUpOrDown} {Math.abs(percentageChange)}% </span>\n              <span className=\"stat-timeframe\">{selectedOption}</span>\n            </div>\n            <div className=\"chart-container\">\n              <h1>New Job Postings</h1>\n              <Bar data={postingsGraphData} options={postingsGraphOptions} />\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-text\">Base Salaries Are</span>\n              <span className={`stat-percent ${salaryChange < 0 ? 'negative' : 'positive'}`}> {salaryUpOrDown} ${Math.abs(salaryChange)}k </span>\n              <span className=\"stat-timeframe\">{selectedOption}</span>\n            </div>\n            <div className=\"chart-container\">\n              <h1>Average Base Salary</h1>\n              <Line data={salaryGraphData} options={salaryGraphOptions} />\n            </div>\n          </div>\n        )}\n        {/*{selectedOption == \"This Week\" && (\n          <div className=\"wip\">\n            <h1>More Data Required</h1>\n            <h1>Available Nov. 25</h1>\n          </div>\n        )},\n        {selectedOption == \"This Month\" && (\n          <div className=\"wip\">\n            <h1>More Data Required</h1>\n            <h1>Available Dec. 16</h1>\n          </div>\n        )}*/}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}