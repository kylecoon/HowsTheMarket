{"ast":null,"code":"var _jsxFileName = \"/Users/kylecoon/Desktop/HowsTheMarket/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './assets/styles/styles.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend);\nconst App = () => {\n  _s();\n  const [status, setStatus] = useState('positive');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [textKey, setTextKey] = useState(0);\n  const [data, setData] = useState({});\n  const [error, setError] = useState(null);\n  const [postingsUpOrDown, setPostingsUpOrDown] = useState(\"Up\");\n  const [percentageChange, setPercentageChange] = useState(null);\n  const [salaryUpOrDown, setSalaryUpOrDown] = useState(\"Up\");\n  const [salaryChange, setSalaryChange] = useState(0);\n  useEffect(() => {\n    if (!selectedOption) return; // Don't fetch until an option is selected\n\n    let timeframe;\n    if (selectedOption === \"Today\") {\n      timeframe = \"day\";\n    } else if (selectedOption === \"This Week\") {\n      timeframe = \"week\";\n    } else if (selectedOption === \"This Month\") {\n      timeframe = \"month\";\n    }\n    const fetchData = async () => {\n      setError(null);\n      try {\n        const response = await axios.get(`http://192.168.0.93:5001/api/${timeframe}`);\n        setData(response.data);\n      } catch (err) {\n        setError(err.message || 'Something went wrong!');\n      }\n    };\n    fetchData();\n  }, [selectedOption]);\n  useEffect(() => {\n    if (Object.keys(data).length === 0) {\n      setPercentageChange(0);\n      setPostingsUpOrDown(\"Up\");\n      return;\n    }\n    let postingsPercentChange = 0;\n    if (data[\"0\"] && !data[\"1\"]) {\n      salaryPercentChange = 100;\n    }\n    if (data[\"0\"] && data[\"1\"]) {\n      salaryPercentChange = ((data[\"0\"][\"job_count\"] - data[\"1\"][\"job_count\"]) / data[\"1\"][\"job_count\"] * 100).toFixed(1);\n    }\n    setPercentageChange(salaryPercentChange);\n    setPostingsUpOrDown(salaryPercentChange > 0 ? \"Up\" : \"Down\");\n    const root = document.documentElement;\n    root.style.setProperty('--primary-color', salaryPercentChange < 0 ? 'firebrick' : 'green');\n  }, [data]);\n  const getTodayLabels = () => {\n    const daysOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n    const today = new Date();\n    const currentDay = today.getDay(); // 0 (Sunday) to 6 (Saturday)\n\n    // Generate the labels array\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 8 + i) % 7;\n      labels.push(daysOfWeek[labelIndex]);\n    }\n    return labels;\n  };\n  const getWeekLabels = () => {\n    return Object.values(data).map(entry => entry.date).reverse();\n  };\n  const getMonthLabels = () => {\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    const today = new Date();\n    const currentDay = today.getMonth(); // 0 (January) to 11 (December)\n\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 13 + i) % 12;\n      labels.push(months[labelIndex]);\n    }\n    return labels;\n  };\n  const chartData = data ? {\n    labels: Object.values(data).map(entry => entry.date).reverse(),\n    datasets: [{\n      label: 'Job Count',\n      data: Object.values(data).map(entry => entry.job_count).reverse(),\n      backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n        if (index === 0) {\n          return 'rgba(0, 128, 0, 0.85)'; // First bar is gray (no comparison to the previous value)\n        }\n        // Compare current job_count with the previous one\n        const previousJobCount = array[index - 1].job_count; // Get the previous job_count\n        return entry.job_count < previousJobCount ? 'rgba(178, 34, 34, 0.85)' : 'rgba(0, 128, 0, 0.85)'; // Red if lower, green if higher\n      }),\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  } : {};\n  const chartOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: tooltipItem => {\n            return `Job Count: ${tooltipItem.raw}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : selectedOption === \"This Week\" ? getWeekLabels() : selectedOption === \"This Month\" ? getMonthLabels() : []\n      }\n    }\n  };\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSelect = option => {\n    setSelectedOption(option);\n    setIsOpen(false);\n    if (option == 'Today') {\n      setStatus('positive');\n    } else {\n      setStatus('negative');\n    }\n    setTextKey(prevKey => prevKey + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How's The Job Market\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-dropdown\",\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-dropdown-selected\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `arrow-down ${isOpen ? 'rotate-down' : 'rotate-right'}`,\n            children: \"\\u25BE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"custom-dropdown-selected-text animate\",\n            children: [\" \", selectedOption]\n          }, textKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `custom-dropdown-options ${isOpen ? 'open' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('Today'),\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('This Week'),\n            children: \"This Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('This Month'),\n            children: \"This Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"question-mark\",\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }, this), selectedOption && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-text\",\n            children: \"Job Postings Are\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `stat-percent ${percentageChange < 0 ? 'negative' : 'positive'}`,\n            children: [\" \", postingsUpOrDown, \" \", Math.abs(percentageChange), \"% \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-timeframe\",\n            children: selectedOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"New Job Postings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-text\",\n            children: \"Base Salaries Are\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `stat-percent ${salaryChange < 0 ? 'negative' : 'positive'}`,\n            children: [\" \", salaryUpOrDown, \" $\", Math.abs(salaryChange), \"k \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-timeframe\",\n            children: selectedOption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"New Job Postings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FAlahZBsldYj+YiiLaD4jWdmYUQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","LineElement","Title","Tooltip","Legend","axios","jsxDEV","_jsxDEV","register","App","_s","status","setStatus","selectedOption","setSelectedOption","isOpen","setIsOpen","textKey","setTextKey","data","setData","error","setError","postingsUpOrDown","setPostingsUpOrDown","percentageChange","setPercentageChange","salaryUpOrDown","setSalaryUpOrDown","salaryChange","setSalaryChange","timeframe","fetchData","response","get","err","message","Object","keys","length","postingsPercentChange","salaryPercentChange","toFixed","root","document","documentElement","style","setProperty","getTodayLabels","daysOfWeek","today","Date","currentDay","getDay","labels","i","labelIndex","push","getWeekLabels","values","map","entry","date","reverse","getMonthLabels","months","getMonth","chartData","datasets","label","job_count","backgroundColor","index","array","previousJobCount","borderColor","borderWidth","chartOptions","maintainAspectRatio","responsive","plugins","legend","display","tooltip","callbacks","tooltipItem","raw","scales","x","grid","toggleDropdown","handleSelect","option","prevKey","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","Math","abs","options","_c","$RefreshReg$"],"sources":["/Users/kylecoon/Desktop/HowsTheMarket/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './assets/styles/styles.css';\nimport axios from 'axios';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend);\n\nconst App = () => {\n  const [status, setStatus] = useState('positive');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [textKey, setTextKey] = useState(0);\n  const [data, setData] = useState({}); \n  const [error, setError] = useState(null); \n  const [postingsUpOrDown, setPostingsUpOrDown] = useState(\"Up\"); \n  const [percentageChange, setPercentageChange] = useState(null);\n  const [salaryUpOrDown, setSalaryUpOrDown] = useState(\"Up\")\n  const [salaryChange, setSalaryChange] = useState(0)\n\n  useEffect(() => {\n    if (!selectedOption) return; // Don't fetch until an option is selected\n\n    let timeframe;\n    if (selectedOption === \"Today\") {\n      timeframe = \"day\";\n    }\n    else if (selectedOption === \"This Week\") {\n      timeframe = \"week\";\n    }\n    else if (selectedOption === \"This Month\") {\n      timeframe = \"month\";\n    }\n\n    const fetchData = async () => {\n      setError(null);\n      try {\n        const response = await axios.get(`http://192.168.0.93:5001/api/${timeframe}`);\n        setData(response.data);\n      } catch (err) {\n        setError(err.message || 'Something went wrong!');\n      }\n    };\n\n    fetchData();\n  }, [selectedOption]);\n\n  useEffect(() => {\n    if (Object.keys(data).length === 0) {\n      setPercentageChange(0);\n      setPostingsUpOrDown(\"Up\");\n      return;\n    }\n    let postingsPercentChange = 0;\n    if (data[\"0\"] && !data[\"1\"]) {\n      salaryPercentChange = 100;\n\n    }\n    if (data[\"0\"] && data[\"1\"]) {\n      salaryPercentChange = (((data[\"0\"][\"job_count\"] - data[\"1\"][\"job_count\"]) / data[\"1\"][\"job_count\"]) * 100).toFixed(1);\n    }\n    setPercentageChange(salaryPercentChange);\n    setPostingsUpOrDown(salaryPercentChange > 0 ? \"Up\" : \"Down\");\n    const root = document.documentElement;\n    root.style.setProperty('--primary-color', salaryPercentChange < 0 ? 'firebrick' : 'green');\n  }, [data]); \n\n  const getTodayLabels = () => {\n    const daysOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n    \n    const today = new Date();\n    const currentDay = today.getDay();  // 0 (Sunday) to 6 (Saturday)\n    \n    // Generate the labels array\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 8+ i) % 7;\n      labels.push(daysOfWeek[labelIndex]);\n    }\n    \n    return labels;\n  };\n\n  const getWeekLabels = () => {\n    return Object.values(data).map(entry => entry.date).reverse();\n  };\n\n  const getMonthLabels = () => {\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    \n    const today = new Date();\n    const currentDay = today.getMonth();  // 0 (January) to 11 (December)\n    \n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 13 + i) % 12;\n      labels.push(months[labelIndex]);\n    }\n    \n    return labels;\n  };\n\n  const chartData = data ? {\n    labels: Object.values(data).map(entry => entry.date).reverse(),  \n    datasets: [\n      {\n        label: 'Job Count',\n        data: Object.values(data).map(entry => entry.job_count).reverse(),  \n        backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n          if (index === 0) {\n            return 'rgba(0, 128, 0, 0.85)';  // First bar is gray (no comparison to the previous value)\n          }\n          // Compare current job_count with the previous one\n          const previousJobCount = array[index - 1].job_count; // Get the previous job_count\n          return entry.job_count < previousJobCount ? 'rgba(178, 34, 34, 0.85)' : 'rgba(0, 128, 0, 0.85)';  // Red if lower, green if higher\n        }),\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n    ],\n  } : {};\n\n  const chartOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        callbacks: {\n          label: (tooltipItem) => {\n            return `Job Count: ${tooltipItem.raw}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false, \n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : \n        (selectedOption === \"This Week\" ? getWeekLabels() :\n        (selectedOption === \"This Month\" ? getMonthLabels() : [])),\n      },\n    },\n  };\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSelect = (option) => {\n    setSelectedOption(option);\n    setIsOpen(false);\n\n    if (option == 'Today') {\n      setStatus('positive')\n    }\n    else {\n      setStatus('negative')\n    }\n  \n    setTextKey((prevKey) => prevKey + 1);\n  };\n\n  return (\n    <div>\n      <h1>How's The Job Market</h1>\n      <div className=\"dropdown-container\">\n        <div className=\"custom-dropdown\" onClick={toggleDropdown}>\n          <div className=\"custom-dropdown-selected\">\n            <span className={`arrow-down ${isOpen ? 'rotate-down' : 'rotate-right'}`}>&#9662;</span>\n            <span key={textKey} className=\"custom-dropdown-selected-text animate\"> {selectedOption}</span>\n          </div>\n          <div className={`custom-dropdown-options ${isOpen ? 'open' : ''}`}>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('Today')}>\n              Today\n            </div>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('This Week')}>\n              This Week\n            </div>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('This Month')}>\n              This Month\n            </div>\n          </div>\n        </div>\n        <span className=\"question-mark\">?</span>\n      </div>\n\n      <div>\n        {error && <p>Error: {error}</p>}\n        {selectedOption && (\n          <div> \n            <div className=\"stat\">\n              <span className=\"stat-text\">Job Postings Are</span>\n              <span className={`stat-percent ${percentageChange < 0 ? 'negative' : 'positive'}`}> {postingsUpOrDown} {Math.abs(percentageChange)}% </span>\n              <span className=\"stat-timeframe\">{selectedOption}</span>\n            </div>\n            <div className=\"chart-container\">\n              <h1>New Job Postings</h1>\n              <Bar data={chartData} options={chartOptions} />\n            </div>\n            <div className=\"stat\">\n              <span className=\"stat-text\">Base Salaries Are</span>\n              <span className={`stat-percent ${salaryChange < 0 ? 'negative' : 'positive'}`}> {salaryUpOrDown} ${Math.abs(salaryChange)}k </span>\n              <span className=\"stat-timeframe\">{selectedOption}</span>\n            </div>\n            <div className=\"chart-container\">\n              <h1>New Job Postings</h1>\n              <Bar data={chartData} options={chartOptions} />\n            </div>\n          </div>\n        )}\n        {/*{selectedOption == \"This Week\" && (\n          <div className=\"wip\">\n            <h1>More Data Required</h1>\n            <h1>Available Nov. 25</h1>\n          </div>\n        )},\n        {selectedOption == \"This Month\" && (\n          <div className=\"wip\">\n            <h1>More Data Required</h1>\n            <h1>Available Dec. 16</h1>\n          </div>\n        )}*/}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}