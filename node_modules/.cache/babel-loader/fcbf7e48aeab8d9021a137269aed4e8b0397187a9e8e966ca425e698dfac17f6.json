{"ast":null,"code":"var _jsxFileName = \"/Users/kylecoon/Desktop/HowsTheMarket/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport { Chart, registerables } from \"chart.js\";\nimport { topojson, ChoroplethController, GeoFeature, ProjectionScale, ColorScale } from \"chartjs-chart-geo\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend, Ticks, ArcElement } from 'chart.js';\nimport { us, stateToAbbr, abbrToState } from \"./frontend/components/Maps\";\nimport './assets/styles/styles.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, LineElement, ArcElement, Title, Tooltip, Legend);\nChart.register(ChoroplethController, GeoFeature, ProjectionScale, ColorScale, ...registerables);\nconst App = () => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState('');\n  const [dropdownText, setDropdownText] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [textKey, setTextKey] = useState(0);\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [fadeIn, setFadeIn] = useState(true);\n  const [postingsUpOrDown, setPostingsUpOrDown] = useState(\"Up\");\n  const [percentageChange, setPercentageChange] = useState(null);\n  const [salaryUpOrDown, setSalaryUpOrDown] = useState(\"Up\");\n  const [salaryChange, setSalaryChange] = useState(0);\n  const [topHirer, setTopHirer] = useState(null);\n  const [topState, setTopState] = useState(null);\n  const [topOfficeType, setTopOfficeType] = useState(null);\n  const [officeTableData, setOfficeTableData] = useState([{\n    officeType: \"On-Site\",\n    amount: 0,\n    percentage: \"33.3%\"\n  }, {\n    officeType: \"Hybrid\",\n    amount: 0,\n    percentage: \"33.3%\"\n  }, {\n    officeType: \"Remote\",\n    amount: 0,\n    percentage: \"33.3%\"\n  }]);\n  useEffect(() => {\n    if (!dropdownText) return; // Don't fetch until an option is selected\n\n    setFadeIn(false);\n    setTimeout(() => {\n      setSelectedOption(dropdownText);\n      let timeframe;\n      if (dropdownText === \"Today\") {\n        timeframe = \"day\";\n      } else if (dropdownText === \"This Week\") {\n        timeframe = \"week\";\n      } else if (dropdownText === \"This Month\") {\n        timeframe = \"month\";\n      }\n      const fetchData = async () => {\n        setError(null);\n        setLoading(true);\n        try {\n          const response = await axios.get(`http://192.168.0.93:5001/api/${timeframe}`);\n          setData(response.data);\n          setLoading(false);\n          setFadeIn(true);\n        } catch (err) {\n          setError(err.message || 'Something went wrong!');\n        }\n      };\n      fetchData();\n    }, 300);\n  }, [dropdownText]);\n  useEffect(() => {\n    if (Object.keys(data).length === 0) {\n      setPercentageChange(0);\n      setPostingsUpOrDown(\"Up\");\n      return;\n    }\n    let postingsPercentChange = 0;\n    let salaryChange = 0;\n    if (data[\"0\"] && !data[\"1\"]) {\n      postingsPercentChange = 100;\n      salaryChange = data[\"0\"][\"avg_salary\"];\n    }\n    if (data[\"0\"] && data[\"1\"]) {\n      postingsPercentChange = ((data[\"0\"][\"job_count\"] - data[\"1\"][\"job_count\"]) / data[\"1\"][\"job_count\"] * 100).toFixed(1);\n      salaryChange = (data[\"0\"][\"avg_salary\"] - data[\"1\"][\"avg_salary\"]).toFixed(1);\n    }\n    setPercentageChange(postingsPercentChange);\n    setPostingsUpOrDown(postingsPercentChange < 0 ? \"Down\" : \"Up\");\n    setSalaryChange(salaryChange);\n    setSalaryUpOrDown(salaryChange < 0 ? \"Down\" : \"Up\");\n    let maxKey = Object.keys(data[\"0\"]['company_frequency']).reduce((max, key) => {\n      return data[\"0\"]['company_frequency'][key] > data[\"0\"]['company_frequency'][max] ? key : max;\n    });\n    setTopHirer(maxKey);\n    maxKey = Object.keys(data[\"0\"]['state_frequency']).reduce((max, key) => {\n      return data[\"0\"]['state_frequency'][key] > data[\"0\"]['state_frequency'][max] ? key : max;\n    });\n    setTopState(maxKey);\n    maxKey = Object.keys(data[\"0\"]['office_type_frequency']).reduce((max, key) => {\n      return data[\"0\"]['office_type_frequency'][key] > data[\"0\"]['office_type_frequency'][max] ? key : max;\n    });\n    setTopOfficeType(maxKey);\n    setOfficeTableData([{\n      officeType: \"On-site\",\n      amount: data[\"0\"][\"office_type_frequency\"][\"On-site\"],\n      percentage: (data[\"0\"][\"office_type_frequency\"][\"On-site\"] / data[\"0\"][\"job_count\"] * 100).toFixed(1).toString() + \"%\"\n    }, {\n      officeType: \"Hybrid\",\n      amount: data[\"0\"][\"office_type_frequency\"][\"Hybrid\"],\n      percentage: (data[\"0\"][\"office_type_frequency\"][\"Hybrid\"] / data[\"0\"][\"job_count\"] * 100).toFixed(1).toString() + \"%\"\n    }, {\n      officeType: \"Remote\",\n      amount: data[\"0\"][\"office_type_frequency\"][\"Remote\"],\n      percentage: (data[\"0\"][\"office_type_frequency\"][\"Remote\"] / data[\"0\"][\"job_count\"] * 100).toFixed(1).toString() + \"%\"\n    }]);\n    console.log(officeTableData);\n    const root = document.documentElement;\n    root.style.setProperty('--primary-color', postingsPercentChange < 0 ? 'firebrick' : 'green');\n    const nation = topojson.feature(us, us.objects.nation).features[0];\n    const states = topojson.feature(us, us.objects.states).features;\n    const chart = new Chart(document.getElementById(\"countryChart\").getContext(\"2d\"), {\n      type: 'choropleth',\n      data: {\n        labels: states.map(d => d.properties.name),\n        datasets: [{\n          label: 'States',\n          outline: nation,\n          data: states.map(d => ({\n            feature: d,\n            value: data[\"0\"][\"state_frequency\"][stateToAbbr[d.properties.name]]\n          }))\n        }]\n      },\n      options: {\n        devicePixelRatio: window.devicePixelRatio,\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            callbacks: {\n              position: 'nearest',\n              label: function (context) {\n                return `${context.raw.feature.properties.name}: ${context.raw.value} Jobs`;\n              }\n            }\n          }\n        },\n        scales: {\n          projection: {\n            axis: 'x',\n            projection: 'albersUsa'\n          },\n          color: {\n            axis: 'x',\n            legend: {\n              position: 'bottom-right',\n              align: window.innerWidth < 767 ? 'right' : 'bottom'\n            },\n            interpolate: 'greens',\n            ticks: {\n              callback: function (value) {\n                return Math.floor(value);\n              }\n            }\n          }\n        }\n      }\n    });\n    chart.resize();\n  }, [data]);\n  const getTodayLabels = () => {\n    const daysOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n    const today = new Date();\n    const currentDay = today.getDay(); // 0 (Sunday) to 6 (Saturday)\n\n    // Generate the labels array\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 8 + i) % 7;\n      labels.push(daysOfWeek[labelIndex]);\n    }\n    return labels;\n  };\n  const getWeekLabels = () => {\n    return Object.values(data).map(entry => entry.date).reverse();\n  };\n  const getMonthLabels = () => {\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    const today = new Date();\n    const currentDay = today.getMonth(); // 0 (January) to 11 (December)\n\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 13 + i) % 12;\n      labels.push(months[labelIndex]);\n    }\n    return labels;\n  };\n  const postingsGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.date).reverse(),\n    datasets: [{\n      label: 'Job Count',\n      data: Object.values(data).map(entry => entry.job_count).reverse(),\n      backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n        if (index === 0) {\n          return 'rgba(0, 128, 0, 0.85)';\n        }\n        // Compare current job_count with the previous one\n        const previousJobCount = array[index - 1].job_count; // Get the previous job_count\n        return entry.job_count < previousJobCount ? 'rgba(178, 34, 34, 0.85)' : 'rgba(0, 128, 0, 0.85)'; // Red if lower, green if higher\n      }),\n      borderColor: '#333',\n      borderWidth: 1\n    }]\n  } : {};\n  const postingsGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: tooltipItem => {\n            return `Job Count: ${tooltipItem.raw}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : selectedOption === \"This Week\" ? getWeekLabels() : selectedOption === \"This Month\" ? getMonthLabels() : [],\n        ticks: {\n          minRotation: window.innerWidth < 768 ? 30 : 0\n        }\n      }\n    }\n  };\n  const salaryGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.avg_salary).reverse(),\n    datasets: [{\n      label: 'Average Salary',\n      data: Object.values(data).map(entry => entry.avg_salary).reverse(),\n      backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n        if (index === 0) {\n          return 'rgb(0, 128, 0)';\n        }\n        const previousSalary = array[index - 1].avg_salary; // Get the previous job_count\n        return entry.avg_salary < previousSalary ? 'rgb(178, 34, 34)' : 'rgb(0, 128, 0)'; // Red if lower, green if higher\n      }),\n      borderColor: '#333',\n      pointBorderColor: '#333',\n      pointBorderWidth: 2,\n      borderWidth: 2,\n      pointRadius: 10,\n      hoverRadius: 12.5,\n      tension: 0.3\n    }]\n  } : {};\n  const salaryGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: tooltipItem => {\n            return `Average Salary: ${tooltipItem.raw}k`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : selectedOption === \"This Week\" ? getWeekLabels() : selectedOption === \"This Month\" ? getMonthLabels() : [],\n        ticks: {\n          minRotation: window.innerWidth < 768 ? 30 : 0\n        }\n      },\n      y: {\n        beginAtZero: false,\n        min: Math.floor(Math.min(...Object.values(data).map(entry => entry.avg_salary)) - 1),\n        ticks: {\n          callback: function (value) {\n            return `${value}k`;\n          }\n        }\n      }\n    }\n  };\n  const companyGraphData = data && data[\"0\"] && data[\"0\"][\"company_frequency\"] ? {\n    labels: Object.keys(data[\"0\"][\"company_frequency\"]),\n    datasets: [{\n      data: Object.values(data[\"0\"][\"company_frequency\"]),\n      backgroundColor: ['rgba(178, 34, 34, 0.8)', 'rgba(255, 140, 0, 0.8)', 'rgba(255, 215, 0, 0.8)', 'rgba(0, 128, 0, 0.8)', 'rgba(30, 144, 255, 0.8)'],\n      borderColor: ['rgba(178, 34, 34, 1)', 'rgba(255, 140, 0, 1)', 'rgba(255, 215, 0, 1)', 'rgba(0, 128, 0, 1)', 'rgba(30, 144, 255, 1)'],\n      borderWidth: 2\n    }]\n  } : {};\n  const companyGraphOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: window.innerWidth < 768 ? 'bottom' : 'top',\n        labels: {\n          boxWidth: 10,\n          boxHeight: 10\n        }\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return `${tooltipItem.label}: ${tooltipItem.raw}`;\n          }\n        }\n      }\n    }\n  };\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSelect = option => {\n    setIsOpen(false);\n    setTextKey(prevKey => prevKey + 1);\n    setDropdownText(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How's The Job Market\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-dropdown\",\n        onClick: toggleDropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-dropdown-selected\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: `arrow-down ${isOpen ? 'rotate-down' : 'rotate-right'}`,\n            children: \"\\u25BE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"custom-dropdown-selected-text animate\",\n            children: [\" \", dropdownText]\n          }, textKey, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `custom-dropdown-options ${isOpen ? 'open' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('Today'),\n            children: \"Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('This Week'),\n            children: \"This Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-dropdown-option\",\n            onClick: () => handleSelect('This Month'),\n            children: \"This Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"question-mark\",\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `data-container ${fadeIn ? 'fade-in' : 'fade-out'}`,\n      children: selectedOption && !loading && Object.keys(data).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section a\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-text\",\n              children: \"Job Postings Are\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `stat-percent ${percentageChange < 0 ? 'negative' : 'positive'}`,\n              children: [\" \", postingsUpOrDown, \" \", Math.abs(percentageChange), \"% \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-timeframe\",\n              children: selectedOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"New Job Postings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              data: postingsGraphData,\n              options: postingsGraphOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section b\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-text\",\n              children: \"Base Salaries Are\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `stat-percent ${salaryChange < 0 ? 'negative' : 'positive'}`,\n              children: [\" \", salaryUpOrDown, \" $\", Math.abs(salaryChange), \"k \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-timeframe\",\n              children: selectedOption\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Average Base Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              data: salaryGraphData,\n              options: salaryGraphOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section a\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-percent negative\",\n              children: [\" \", topHirer, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-text\",\n              children: \"Has Posted The Most\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-timeframe\",\n              children: [\" \", selectedOption]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container doughnut\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Top 5 Posting Companies\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n              data: companyGraphData,\n              options: companyGraphOptions,\n              id: \"doughnut\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section b\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-percent positive\",\n              children: [\" \", abbrToState[topState], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-text\",\n              children: \"Has Posted The Most\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-timeframe\",\n              children: [\" \", selectedOption]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container country-chart\",\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              id: \"countryChart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section a\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-percent positive\",\n              children: [\" \", topOfficeType, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-text\",\n              children: \"Is The Most Common \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-timeframe\",\n              children: [\"Office Type \", selectedOption]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container table\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              id: \"office-table\",\n              border: \"1\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Office Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Percentage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: officeTableData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  class: `row-${index}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: row.officeType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 466,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: row.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: row.percentage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section b\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"methodology\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Methodology:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 22\n              }, this), \"New job postings are collected daily at 12am from LinkedIn with the following search criteria:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Search: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 25\n                }, this), \"\\\"software\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Date Posted: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 25\n                }, this), \"Past 24 Hours\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Experience Level: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 25\n                }, this), \"Internship, Entry Level, Associate\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Job Type: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 25\n                }, this), \"Full-time, Part-time, Contract, Internship, Other\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Has Verifications: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 25\n                }, this), \"True\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xMMLKvcycqv8QDomtVjlMj0Lk2U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Line","Doughnut","Chart","registerables","topojson","ChoroplethController","GeoFeature","ProjectionScale","ColorScale","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","LineElement","Title","Tooltip","Legend","Ticks","ArcElement","us","stateToAbbr","abbrToState","axios","jsxDEV","_jsxDEV","register","App","_s","selectedOption","setSelectedOption","dropdownText","setDropdownText","isOpen","setIsOpen","textKey","setTextKey","data","setData","loading","setLoading","error","setError","fadeIn","setFadeIn","postingsUpOrDown","setPostingsUpOrDown","percentageChange","setPercentageChange","salaryUpOrDown","setSalaryUpOrDown","salaryChange","setSalaryChange","topHirer","setTopHirer","topState","setTopState","topOfficeType","setTopOfficeType","officeTableData","setOfficeTableData","officeType","amount","percentage","setTimeout","timeframe","fetchData","response","get","err","message","Object","keys","length","postingsPercentChange","toFixed","maxKey","reduce","max","key","toString","console","log","root","document","documentElement","style","setProperty","nation","feature","objects","features","states","chart","getElementById","getContext","type","labels","map","d","properties","name","datasets","label","outline","value","options","devicePixelRatio","window","responsive","maintainAspectRatio","plugins","legend","display","tooltip","callbacks","position","context","raw","scales","projection","axis","color","align","innerWidth","interpolate","ticks","callback","Math","floor","resize","getTodayLabels","daysOfWeek","today","Date","currentDay","getDay","i","labelIndex","push","getWeekLabels","values","entry","date","reverse","getMonthLabels","months","getMonth","postingsGraphData","job_count","backgroundColor","index","array","previousJobCount","borderColor","borderWidth","postingsGraphOptions","tooltipItem","x","grid","minRotation","salaryGraphData","avg_salary","previousSalary","pointBorderColor","pointBorderWidth","pointRadius","hoverRadius","tension","salaryGraphOptions","y","beginAtZero","min","companyGraphData","companyGraphOptions","boxWidth","boxHeight","toggleDropdown","handleSelect","option","prevKey","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","abs","id","border","row","class","_c","$RefreshReg$"],"sources":["/Users/kylecoon/Desktop/HowsTheMarket/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar, Line, Doughnut } from 'react-chartjs-2';\nimport {Chart, registerables} from \"chart.js\";\nimport {topojson, ChoroplethController, GeoFeature, ProjectionScale, ColorScale} from \"chartjs-chart-geo\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, LineElement, Title, Tooltip, Legend, Ticks, ArcElement } from 'chart.js';\nimport { us, stateToAbbr, abbrToState} from \"./frontend/components/Maps\"\nimport './assets/styles/styles.css';\nimport axios from 'axios';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, LineElement, ArcElement, Title, Tooltip, Legend);\n\nChart.register(ChoroplethController, GeoFeature, ProjectionScale, ColorScale, ...registerables);\n\nconst App = () => {\n  const [selectedOption, setSelectedOption] = useState('');\n  const [dropdownText, setDropdownText] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [textKey, setTextKey] = useState(0);\n  const [data, setData] = useState({}); \n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null); \n  const [fadeIn, setFadeIn] = useState(true);\n  const [postingsUpOrDown, setPostingsUpOrDown] = useState(\"Up\"); \n  const [percentageChange, setPercentageChange] = useState(null);\n  const [salaryUpOrDown, setSalaryUpOrDown] = useState(\"Up\")\n  const [salaryChange, setSalaryChange] = useState(0)\n  const [topHirer, setTopHirer] = useState(null);\n  const [topState, setTopState] = useState(null);\n  const [topOfficeType, setTopOfficeType] = useState(null)\n  const [officeTableData, setOfficeTableData] = useState([\n    { officeType: \"On-Site\", amount: 0, percentage: \"33.3%\" },\n    { officeType: \"Hybrid\", amount: 0, percentage: \"33.3%\" },\n    { officeType: \"Remote\", amount: 0, percentage: \"33.3%\" }\n  ]);\n\n  useEffect(() => {\n    if (!dropdownText) return; // Don't fetch until an option is selected\n\n    setFadeIn(false);\n    setTimeout(() => {\n      setSelectedOption(dropdownText);\n      let timeframe;\n      if (dropdownText === \"Today\") {\n        timeframe = \"day\";\n      }\n      else if (dropdownText === \"This Week\") {\n        timeframe = \"week\";\n      }\n      else if (dropdownText === \"This Month\") {\n        timeframe = \"month\";\n      }\n\n      const fetchData = async () => {\n        setError(null);\n        setLoading(true);\n        try {\n          const response = await axios.get(`http://192.168.0.93:5001/api/${timeframe}`);\n          setData(response.data);\n          setLoading(false);\n          setFadeIn(true);\n        } catch (err) {\n          setError(err.message || 'Something went wrong!');\n        }\n      };\n\n      fetchData();\n    }, 300)\n\n  }, [dropdownText]);\n\n  useEffect(() => {\n    if (Object.keys(data).length === 0) {\n      setPercentageChange(0);\n      setPostingsUpOrDown(\"Up\");\n      return;\n    }\n    let postingsPercentChange = 0;\n    let salaryChange = 0;\n    if (data[\"0\"] && !data[\"1\"]) {\n      postingsPercentChange = 100;\n      salaryChange = data[\"0\"][\"avg_salary\"]\n\n    }\n    if (data[\"0\"] && data[\"1\"]) {\n      postingsPercentChange = (((data[\"0\"][\"job_count\"] - data[\"1\"][\"job_count\"]) / data[\"1\"][\"job_count\"]) * 100).toFixed(1);\n      salaryChange = (data[\"0\"][\"avg_salary\"] - data[\"1\"][\"avg_salary\"]).toFixed(1);\n    }\n    setPercentageChange(postingsPercentChange);\n    setPostingsUpOrDown(postingsPercentChange < 0 ? \"Down\" : \"Up\");\n\n    setSalaryChange(salaryChange);\n    setSalaryUpOrDown(salaryChange < 0 ? \"Down\" : \"Up\");\n\n    let maxKey = Object.keys(data[\"0\"]['company_frequency']).reduce((max, key) => {\n      return data[\"0\"]['company_frequency'][key] > data[\"0\"]['company_frequency'][max] ? key : max;\n    });\n    setTopHirer(maxKey);\n\n    maxKey = Object.keys(data[\"0\"]['state_frequency']).reduce((max, key) => {\n      return data[\"0\"]['state_frequency'][key] > data[\"0\"]['state_frequency'][max] ? key : max;\n    });\n    setTopState(maxKey);\n\n    maxKey = Object.keys(data[\"0\"]['office_type_frequency']).reduce((max, key) => {\n      return data[\"0\"]['office_type_frequency'][key] > data[\"0\"]['office_type_frequency'][max] ? key : max;\n    });\n    setTopOfficeType(maxKey);\n\n    setOfficeTableData([\n      { officeType: \"On-site\", amount: data[\"0\"][\"office_type_frequency\"][\"On-site\"], percentage: ((((data[\"0\"][\"office_type_frequency\"][\"On-site\"] / data[\"0\"][\"job_count\"]) * 100).toFixed(1)).toString() + \"%\") },\n      { officeType: \"Hybrid\", amount: data[\"0\"][\"office_type_frequency\"][\"Hybrid\"], percentage: ((((data[\"0\"][\"office_type_frequency\"][\"Hybrid\"] / data[\"0\"][\"job_count\"]) * 100).toFixed(1)).toString() + \"%\") },\n      { officeType: \"Remote\", amount: data[\"0\"][\"office_type_frequency\"][\"Remote\"], percentage: ((((data[\"0\"][\"office_type_frequency\"][\"Remote\"] / data[\"0\"][\"job_count\"]) * 100).toFixed(1)).toString() + \"%\") }\n    ]);\n\n    console.log(officeTableData);\n\n    const root = document.documentElement;\n    root.style.setProperty('--primary-color', postingsPercentChange < 0 ? 'firebrick' : 'green');\n\n    const nation = topojson.feature(us, us.objects.nation).features[0];\n    const states = topojson.feature(us, us.objects.states).features;\n    \n    const chart = new Chart(document.getElementById(\"countryChart\").getContext(\"2d\"), {\n      type: 'choropleth',\n      data: {\n        labels: states.map((d) => d.properties.name),\n        datasets: [{\n          label: 'States',\n          outline: nation,\n          data: states.map((d) => ({feature: d, value: data[\"0\"][\"state_frequency\"][stateToAbbr[d.properties.name]]})),\n        }]\n      },\n      options: {\n        devicePixelRatio: window.devicePixelRatio,\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            display: false\n          },\n          tooltip: {\n            callbacks: {\n              position: 'nearest',\n              label: function(context) {\n                return `${context.raw.feature.properties.name}: ${context.raw.value} Jobs`;\n              }\n            }\n          }\n        },\n        scales: {\n          projection: {\n            axis: 'x',\n            projection: 'albersUsa'  \n          },\n          color: {\n            axis: 'x',\n            legend: {\n              position: 'bottom-right',\n              align: window.innerWidth < 767 ? 'right' : 'bottom',\n            },\n            interpolate: 'greens',\n            ticks: {\n              callback: function(value) {\n                return Math.floor(value); \n              },\n            }\n          }\n        },\n      }\n    });\n    chart.resize();\n  }, [data]); \n\n  const getTodayLabels = () => {\n    const daysOfWeek = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n    \n    const today = new Date();\n    const currentDay = today.getDay();  // 0 (Sunday) to 6 (Saturday)\n    \n    // Generate the labels array\n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 8+ i) % 7;\n      labels.push(daysOfWeek[labelIndex]);\n    }\n    \n    return labels;\n  };\n\n  const getWeekLabels = () => {\n    return Object.values(data).map(entry => entry.date).reverse();\n  };\n\n  const getMonthLabels = () => {\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n    \n    const today = new Date();\n    const currentDay = today.getMonth();  // 0 (January) to 11 (December)\n    \n    let labels = [];\n    for (let i = 0; i < Object.keys(data).length; i++) {\n      // Calculate the index for each day to shift right to left\n      const labelIndex = (currentDay - Object.keys(data).length + 13 + i) % 12;\n      labels.push(months[labelIndex]);\n    }\n    \n    return labels;\n  };\n\n  const postingsGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.date).reverse(),  \n    datasets: [\n      {\n        label: 'Job Count',\n        data: Object.values(data).map(entry => entry.job_count).reverse(),  \n        backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n          if (index === 0) {\n            return 'rgba(0, 128, 0, 0.85)';\n          }\n          // Compare current job_count with the previous one\n          const previousJobCount = array[index - 1].job_count; // Get the previous job_count\n          return entry.job_count < previousJobCount ? 'rgba(178, 34, 34, 0.85)' : 'rgba(0, 128, 0, 0.85)';  // Red if lower, green if higher\n        }),\n        borderColor: '#333',\n        borderWidth: 1,\n      },\n    ],\n  } : {};\n\n  const postingsGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        callbacks: {\n          label: (tooltipItem) => {\n            return `Job Count: ${tooltipItem.raw}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false, \n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : \n        (selectedOption === \"This Week\" ? getWeekLabels() :\n        (selectedOption === \"This Month\" ? getMonthLabels() : [])),\n        ticks: {\n          minRotation: window.innerWidth < 768 ? 30 : 0,\n        },\n      },\n    },\n  };\n\n  const salaryGraphData = data ? {\n    labels: Object.values(data).map(entry => entry.avg_salary).reverse(),  \n    datasets: [\n      {\n        label: 'Average Salary',\n        data: Object.values(data).map(entry => entry.avg_salary).reverse(),  \n        backgroundColor: Object.values(data).reverse().map((entry, index, array) => {\n          if (index === 0) {\n            return 'rgb(0, 128, 0)'; \n          }\n          const previousSalary = array[index - 1].avg_salary; // Get the previous job_count\n          return entry.avg_salary < previousSalary ? 'rgb(178, 34, 34)' : 'rgb(0, 128, 0)';  // Red if lower, green if higher\n        }),\n        borderColor: '#333',  \n        pointBorderColor: '#333',\n        pointBorderWidth: 2,\n        borderWidth: 2,\n        pointRadius: 10,\n        hoverRadius: 12.5,\n        tension: 0.3,\n      },\n    ],\n  } : {};\n\n  const salaryGraphOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        callbacks: {\n          label: (tooltipItem) => {\n            return `Average Salary: ${tooltipItem.raw}k`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false, \n        },\n        labels: selectedOption === \"Today\" ? getTodayLabels() : \n        (selectedOption === \"This Week\" ? getWeekLabels() :\n        (selectedOption === \"This Month\" ? getMonthLabels() : [])),\n        ticks: {\n          minRotation: window.innerWidth < 768 ? 30 : 0,\n        },\n      },\n      y: {\n        beginAtZero: false, \n        min: Math.floor(Math.min(...Object.values(data).map(entry => entry.avg_salary)) - 1),  \n        ticks: {\n          callback: function(value) {\n            return `${value}k`;\n          },\n        },\n      },\n    },\n  };\n\n  const companyGraphData = data && data[\"0\"] && data[\"0\"][\"company_frequency\"] ? {\n    labels: Object.keys(data[\"0\"][\"company_frequency\"]),\n    datasets: [\n      {\n        data: Object.values(data[\"0\"][\"company_frequency\"]),\n        backgroundColor: [\n          'rgba(178, 34, 34, 0.8)',\n          'rgba(255, 140, 0, 0.8)', \n          'rgba(255, 215, 0, 0.8)',\n          'rgba(0, 128, 0, 0.8)',\n          'rgba(30, 144, 255, 0.8)',\n        ],\n        borderColor: [\n          'rgba(178, 34, 34, 1)',\n          'rgba(255, 140, 0, 1)', \n          'rgba(255, 215, 0, 1)',\n          'rgba(0, 128, 0, 1)',\n          'rgba(30, 144, 255, 1)',\n        ],\n        borderWidth: 2,\n      },\n    ],\n  } : {};\n  \n  const companyGraphOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: window.innerWidth < 768 ? 'bottom' : 'top',\n        labels: {\n          boxWidth: 10,\n          boxHeight: 10,\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return `${tooltipItem.label}: ${tooltipItem.raw}`;\n          },\n        },\n      },\n    },\n  };\n\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const handleSelect = (option) => {\n    setIsOpen(false);\n    setTextKey((prevKey) => prevKey + 1);\n    setDropdownText(option);\n  };\n\n  return (\n    <div>\n      <h1>How's The Job Market</h1>\n      <div className=\"dropdown-container\">\n        <div className=\"custom-dropdown\" onClick={toggleDropdown}>\n          <div className=\"custom-dropdown-selected\">\n            <span className={`arrow-down ${isOpen ? 'rotate-down' : 'rotate-right'}`}>&#9662;</span>\n            <span key={textKey} className=\"custom-dropdown-selected-text animate\"> {dropdownText}</span>\n          </div>\n          <div className={`custom-dropdown-options ${isOpen ? 'open' : ''}`}>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('Today')}>\n              Today\n            </div>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('This Week')}>\n              This Week\n            </div>\n            <div className=\"custom-dropdown-option\" onClick={() => handleSelect('This Month')}>\n              This Month\n            </div>\n          </div>\n        </div>\n        <span className=\"question-mark\">?</span>\n      </div>\n\n      <div className={`data-container ${fadeIn ? 'fade-in' : 'fade-out'}`}>\n        {selectedOption && !loading && Object.keys(data).length > 0 && (\n          <div> \n            <div className=\"section a\">\n              <div className=\"stat\">\n                <span className=\"stat-text\">Job Postings Are</span>\n                <span className={`stat-percent ${percentageChange < 0 ? 'negative' : 'positive'}`}> {postingsUpOrDown} {Math.abs(percentageChange)}% </span>\n                <span className=\"stat-timeframe\">{selectedOption}</span>\n              </div>\n              <div className=\"chart-container\">\n                <h1>New Job Postings</h1>\n                <Bar data={postingsGraphData} options={postingsGraphOptions} />\n              </div>\n            </div>\n            <div className=\"section b\">\n              <div className=\"stat\">\n                <span className=\"stat-text\">Base Salaries Are</span>\n                <span className={`stat-percent ${salaryChange < 0 ? 'negative' : 'positive'}`}> {salaryUpOrDown} ${Math.abs(salaryChange)}k </span>\n                <span className=\"stat-timeframe\">{selectedOption}</span>\n              </div>\n              <div className=\"chart-container\">\n                <h1>Average Base Salary</h1>\n                <Line data={salaryGraphData} options={salaryGraphOptions} />\n              </div>\n            </div>\n            <div className=\"section a\">\n              <div className=\"stat\">\n              <span className='stat-percent negative'> {topHirer} </span>\n                <span className=\"stat-text\">Has Posted The Most</span>\n                <span className=\"stat-timeframe\"> {selectedOption}</span>\n              </div>\n              <div className=\"chart-container doughnut\">\n                <h1>Top 5 Posting Companies</h1>\n                <Doughnut data={companyGraphData} options={companyGraphOptions} id=\"doughnut\"/>\n              </div>\n            </div>\n            <div className=\"section b\">\n              <div className=\"stat\">\n              <span className='stat-percent positive'> {abbrToState[topState]} </span>\n                <span className=\"stat-text\">Has Posted The Most</span>\n                <span className=\"stat-timeframe\"> {selectedOption}</span>\n              </div>\n              <div className=\"chart-container country-chart\">\n                <canvas id=\"countryChart\"></canvas>\n              </div>\n            </div>\n            <div className=\"section a\">\n              <div className=\"stat\">\n              <span className='stat-percent positive'> {topOfficeType} </span>\n                <span className=\"stat-text\">Is The Most Common </span>\n                <span className=\"stat-timeframe\">Office Type {selectedOption}</span>\n              </div>\n              <div className=\"chart-container table\">\n                <table id =\"office-table\" border=\"1\">\n                  <thead>\n                    <tr>\n                      <th>Office Type</th>\n                      <th>Amount</th>\n                      <th>Percentage</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {officeTableData.map((row, index) => (\n                      <tr key={index} class={`row-${index}`}>\n                        <td >{row.officeType}</td>\n                        <td>{row.amount}</td>\n                        <td>{row.percentage}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <div className=\"section b\">\n              <div className='methodology'>\n                  <b>Methodology:</b>\n                  <p><br></br>New job postings are collected daily at 12am from LinkedIn with the following search criteria:</p>\n                  <br></br>\n                  <ul>\n                    <li><b>Search: </b>\"software\"</li>\n                    <li><b>Date Posted: </b>Past 24 Hours</li>\n                    <li><b>Experience Level: </b>Internship, Entry Level, Associate</li>\n                    <li><b>Job Type: </b>Full-time, Part-time, Contract, Internship, Other</li>\n                    <li><b>Has Verifications: </b>True</li>\n                  </ul>\n                  <br></br>\n              </div>\n            </div>\n          </div>\n        )}\n        {/*{selectedOption == \"This Month\" && (\n          <div className=\"wip\">\n            <h1>More Data Required</h1>\n            <h1>Available Dec. 16</h1>\n          </div>\n        )}*/}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}